/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  MarketSettleFacet,
  MarketSettleFacetInterface,
} from "../../../../../contracts/core/facets/market/MarketSettleFacet";

const _abi = [
  {
    inputs: [],
    name: "Empty",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAccessableByDao",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAccessableByLiquidator",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAccessableByVault",
    type: "error",
  },
  {
    inputs: [],
    name: "OutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int16[]",
        name: "feeRates",
        type: "int16[]",
      },
    ],
    name: "settle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settleAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class MarketSettleFacet__factory {
  static readonly abi = _abi;
  static createInterface(): MarketSettleFacetInterface {
    return new utils.Interface(_abi) as MarketSettleFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketSettleFacet {
    return new Contract(address, _abi, signerOrProvider) as MarketSettleFacet;
  }
}
