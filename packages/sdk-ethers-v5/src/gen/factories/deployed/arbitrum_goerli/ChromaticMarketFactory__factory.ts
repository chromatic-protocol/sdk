/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChromaticMarketFactory,
  ChromaticMarketFactoryInterface,
} from "../../../deployed/arbitrum_goerli/ChromaticMarketFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketDiamondCutFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketLoupeFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketStateFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketLiquidityFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketLiquidityLensFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketTradeFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketLiquidateFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketSettleFacet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadySetKeeperFeePayer",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadySetLiquidator",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadySetMarketSettlement",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadySetVault",
    type: "error",
  },
  {
    inputs: [],
    name: "ExistMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "NotRegisteredOracleProvider",
    type: "error",
  },
  {
    inputs: [],
    name: "NotRegisteredSettlementToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAccessableByDao",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "annualRateBPS",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "beginTimestamp",
        type: "uint256",
      },
    ],
    name: "InterestRateRecordAppended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "annualRateBPS",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "beginTimestamp",
        type: "uint256",
      },
    ],
    name: "LastInterestRateRecordRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "MarketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "minTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "leverageLevel",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IOracleProviderRegistry.OracleProviderProperties",
        name: "properties",
        type: "tuple",
      },
    ],
    name: "OracleProviderRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
    ],
    name: "OracleProviderUnregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "earningDistributionThreshold",
        type: "uint256",
      },
    ],
    name: "SetEarningDistributionThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "flashLoanFeeRate",
        type: "uint256",
      },
    ],
    name: "SetFlashLoanFeeRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "keeperFeePayer",
        type: "address",
      },
    ],
    name: "SetKeeperFeePayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "SetLiquidator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "marketSettlement",
        type: "address",
      },
    ],
    name: "SetMarketSettlement",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "minimumMargin",
        type: "uint256",
      },
    ],
    name: "SetMinimumMargin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint24",
        name: "uniswapFeeTier",
        type: "uint24",
      },
    ],
    name: "SetUniswapFeeTier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "SetVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "minimumMargin",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flashLoanFeeRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "earningDistributionThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "uniswapFeeTier",
        type: "uint24",
      },
    ],
    name: "SettlementTokenRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dao",
        type: "address",
      },
    ],
    name: "UpdateDao",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
    ],
    name: "UpdateLeverageLevel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "minTakeProfitBPS",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "maxTakeProfitBPS",
        type: "uint32",
      },
    ],
    name: "UpdateTakeProfitBPSRange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "UpdateTreasury",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "annualRateBPS",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "beginTimestamp",
        type: "uint256",
      },
    ],
    name: "appendInterestRateRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "calculateInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
    ],
    name: "createMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "currentInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "annualRateBPS",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getEarningDistributionThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getFlashLoanFeeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getInterestRateRecords",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "annualRateBPS",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct InterestRate.Record[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
    ],
    name: "getMarket",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarkets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
    ],
    name: "getMarketsBySettlmentToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getMinimumMargin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
    ],
    name: "getOracleProviderProperties",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "minTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "leverageLevel",
            type: "uint8",
          },
        ],
        internalType: "struct IOracleProviderRegistry.OracleProviderProperties",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getUniswapFeeTier",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "isRegisteredMarket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
    ],
    name: "isRegisteredOracleProvider",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isRegisteredSettlementToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keeperFeePayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketSettlement",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parameters",
    outputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "minTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "leverageLevel",
            type: "uint8",
          },
        ],
        internalType: "struct IOracleProviderRegistry.OracleProviderProperties",
        name: "properties",
        type: "tuple",
      },
    ],
    name: "registerOracleProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "flashLoanFeeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "earningDistributionThreshold",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "uniswapFeeTier",
        type: "uint24",
      },
    ],
    name: "registerSettlementToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registeredOracleProviders",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registeredSettlementTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeLastInterestRateRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "earningDistributionThreshold",
        type: "uint256",
      },
    ],
    name: "setEarningDistributionThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "flashLoanFeeRate",
        type: "uint256",
      },
    ],
    name: "setFlashLoanFeeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeperFeePayer",
        type: "address",
      },
    ],
    name: "setKeeperFeePayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidator",
        type: "address",
      },
    ],
    name: "setLiquidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketSettlement",
        type: "address",
      },
    ],
    name: "setMarketSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumMargin",
        type: "uint256",
      },
    ],
    name: "setMinimumMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "uniswapFeeTier",
        type: "uint24",
      },
    ],
    name: "setUniswapFeeTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
    ],
    name: "unregisterOracleProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
    ],
    name: "updateDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
    ],
    name: "updateLeverageLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "minTakeProfitBPS",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxTakeProfitBPS",
        type: "uint32",
      },
    ],
    name: "updateTakeProfitBPSRange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101806040523480156200001257600080fd5b50604051620035d9380380620035d9833981016040819052620000359162000151565b6001600160a01b0388166200004957600080fd5b6001600160a01b0387166200005d57600080fd5b6001600160a01b0386166200007157600080fd5b6001600160a01b0385166200008557600080fd5b6001600160a01b0384166200009957600080fd5b6001600160a01b038316620000ad57600080fd5b6001600160a01b038216620000c157600080fd5b6001600160a01b038116620000d557600080fd5b60008054336001600160a01b031991821681179092556004805490911690911790556001600160a01b0397881660805295871660a05293861660c05291851660e0528416610100528316610120528216610140521661016052620001f9565b80516001600160a01b03811681146200014c57600080fd5b919050565b600080600080600080600080610100898b0312156200016f57600080fd5b6200017a8962000134565b97506200018a60208a0162000134565b96506200019a60408a0162000134565b9550620001aa60608a0162000134565b9450620001ba60808a0162000134565b9350620001ca60a08a0162000134565b9250620001da60c08a0162000134565b9150620001ea60e08a0162000134565b90509295985092959890939650565b60805160a05160c05160e0516101005161012051610140516101605161337a6200025f6000396000610ba001526000610b7701526000610b4e01526000610b2601526000610afe01526000610ad601526000610aae01526000610a86015261337a6000f3fe608060405234801561001057600080fd5b50600436106102d35760003560e01c8063705b170e11610186578063b38e8bc6116100e3578063ebe55aff11610097578063fbfa77cf11610071578063fbfa77cf146106cc578063fc3e9026146106ec578063fddd4d8f146106ff57600080fd5b8063ebe55aff14610691578063ec2c9016146106b1578063f7644320146106b957600080fd5b8063e4517f09116100c8578063e4517f0914610658578063e4f7b8a91461066b578063ea38ff331461067e57600080fd5b8063b38e8bc614610632578063dc2d7f181461064557600080fd5b8063890357301161013a578063a1edd0461161011f578063a1edd046146105f9578063a7f557d41461060c578063a8c885af1461061f57600080fd5b8063890357301461057d578063919c0653146105e657600080fd5b80637f51bb1f1161016b5780637f51bb1f1461051f578063827f909f14610532578063861bef211461053a57600080fd5b8063705b170e146104f9578063714af34b1461050c57600080fd5b80633ba2cce9116102345780635b5b52c0116101e857806367250c95116101cd57806367250c95146104ac5780636817031b146104d35780636cfaa541146104e657600080fd5b80635b5b52c01461046c57806361d027b31461048c57600080fd5b80634162169f116102195780634162169f146104165780634a58e49e146104365780634ba1c3781461045957600080fd5b80633ba2cce9146103be5780634046ebae146103d157600080fd5b806324b101981161028b57806328abb7631161027057806328abb763146103855780632f4ce9761461039857806333c9d5d7146103ab57600080fd5b806324b101981461035157806327633b5b1461037257600080fd5b80630ae29d04116102bc5780630ae29d041461030b5780630e1a4f0d1461031e578063207fd1261461033e57600080fd5b806301c76f81146102d857806306216c37146102ed575b600080fd5b6102eb6102e6366004612de1565b610712565b005b6102f56107f9565b6040516103029190612dfe565b60405180910390f35b6102eb610319366004612e58565b61080a565b61033161032c366004612de1565b610866565b6040516103029190612e84565b6102eb61034c366004612ed3565b6108ff565b61036461035f366004612de1565b610e3c565b604051908152602001610302565b610364610380366004612de1565b610e4f565b610364610393366004612de1565b610e7a565b6102eb6103a6366004612e58565b610ea5565b6102eb6103b9366004612de1565b610f01565b6102eb6103cc366004612de1565b610f58565b6001546103f19073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610302565b6000546103f19073ffffffffffffffffffffffffffffffffffffffff1681565b610449610444366004612de1565b61103f565b6040519015158152602001610302565b6102eb610467366004612f24565b61104c565b6003546103f19073ffffffffffffffffffffffffffffffffffffffff1681565b6004546103f19073ffffffffffffffffffffffffffffffffffffffff1681565b6104bf6104ba366004612de1565b6110d6565b60405162ffffff9091168152602001610302565b6102eb6104e1366004612de1565b611106565b6102eb6104f4366004612f59565b6111ed565b610364610507366004612f8e565b61124c565b6103f161051a366004612ed3565b611265565b6102eb61052d366004612de1565b611430565b6102f56114c7565b61054d610548366004612de1565b6114d3565b60408051825163ffffffff9081168252602080850151909116908201529181015160ff1690820152606001610302565b6105b96040805180820190915260125473ffffffffffffffffffffffffffffffffffffffff908116808352601354909116602090920182905291565b6040805173ffffffffffffffffffffffffffffffffffffffff938416815292909116602083015201610302565b6102eb6105f4366004612fda565b611599565b610449610607366004612de1565b611675565b6102eb61061a366004613006565b611682565b6102eb61062d366004612de1565b61181d565b6102eb610640366004612de1565b6118b2565b610449610653366004612de1565b611920565b6102eb610666366004613074565b61192d565b6102eb610679366004612e58565b6119c0565b6102eb61068c366004612de1565b611a1c565b6005546103f19073ffffffffffffffffffffffffffffffffffffffff1681565b6102f5611b03565b6102eb6106c736600461314e565b611b0f565b6002546103f19073ffffffffffffffffffffffffffffffffffffffff1681565b6102f56106fa366004612de1565b611bf9565b61036461070d366004612de1565b611c89565b61071a611cb4565b73ffffffffffffffffffffffffffffffffffffffff811661073a57600080fd5b60015473ffffffffffffffffffffffffffffffffffffffff161561078a576040517fb209caed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f111c6aeb2006d748bdae2ddf082866e6ce7eb3d48ef324b5d9547570f5694e4f90600090a250565b6060610805600b611d07565b905090565b610812611cb4565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600e6020526040808220849055518392917f4c0223e719940189ef3681b9c0f0450c816c7a262c1963087e3a4911f3bccf5191a35050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600d60205260409020606090805480602002602001604051908101604052809291908181526020016000905b828210156108f4578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906108ae565b505050509050919050565b8161090b600682611d12565b610941576040517f3c9b573900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61094c600b83611d12565b610982576040517f12a5f55200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff80841660009081526014602090815260408083209386168352929052205460ff16156109ef576040517fde70de2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8381166000818152601460209081526040808320878616808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f4c2e074b00000000000000000000000000000000000000000000000000000000815260126004820152602481019390935260448301527f0000000000000000000000000000000000000000000000000000000000000000831660648301527f0000000000000000000000000000000000000000000000000000000000000000831660848301527f0000000000000000000000000000000000000000000000000000000000000000831660a48301527f0000000000000000000000000000000000000000000000000000000000000000831660c48301527f0000000000000000000000000000000000000000000000000000000000000000831660e48301527f000000000000000000000000000000000000000000000000000000000000000083166101048301527f000000000000000000000000000000000000000000000000000000000000000083166101248301527f000000000000000000000000000000000000000000000000000000000000000090921661014482015273cFE95AC9235B70dD0B25228bB3f5e893dd4B5Fd290634c2e074b9061016401602060405180830381865af4158015610c05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c299190613193565b73ffffffffffffffffffffffffffffffffffffffff84811660009081526015602090815260408220805460018101825590835291200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169183169190911790559050610c99601682611d25565b508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fe63e6130091e2155004c4b5ac35e8fb9be704d6637ff3068a8f710ba36c9f41a60405160405180910390a46002546040517fc440a65c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301529091169063c440a65c90602401600060405180830381600087803b158015610d7857600080fd5b505af1158015610d8c573d6000803e3d6000fd5b505060055473ffffffffffffffffffffffffffffffffffffffff16159150610e369050576005546040517fd0d6451f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301529091169063d0d6451f90602401600060405180830381600087803b158015610e1d57600080fd5b505af1158015610e31573d6000803e3d6000fd5b505050505b50505050565b6000610e49600b83611d47565b92915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600e6020526040812054610e49565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600f6020526040812054610e49565b610ead611cb4565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260106020526040808220849055518392917fad9146057238aa90fc2f022eed688ed9c094d5b01a070c1d9ed7140ae1e90b5a91a35050565b610f09611cb4565b610f14600682611e0a565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f2204279f4b3dc089ca3bb773580383cc44d6d1414667f78def48751c811422d090600090a250565b610f60611cb4565b73ffffffffffffffffffffffffffffffffffffffff8116610f8057600080fd5b60055473ffffffffffffffffffffffffffffffffffffffff1615610fd0576040517f19b72bf500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f860a753206eefe132d5ea57c3c79e9370cbbcb7d982ddd0dd640ecd9fada86a290600090a250565b6000610e49601683611e14565b611054611cb4565b73ffffffffffffffffffffffffffffffffffffffff821660008181526011602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001662ffffff861690811790915590519092917fdb5545d4da29cde71057a77fa9788f26638ed7c232145a360e250d112462286a91a35050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526011602052604081205462ffffff16610e49565b61110e611cb4565b73ffffffffffffffffffffffffffffffffffffffff811661112e57600080fd5b60025473ffffffffffffffffffffffffffffffffffffffff161561117e576040517fb661034d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090600090a250565b6111f5611cb4565b611202600b848484611e43565b80828473ffffffffffffffffffffffffffffffffffffffff167ff88fac6bf5acd4c3248b702ace956ada3aed01acc26526e8d25e264af2bd28e860405160405180910390a4505050565b600061125c600b86868686611ef8565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260146020908152604080832093851683529290529081205460ff166112a957506000610e49565b73ffffffffffffffffffffffffffffffffffffffff821660009081526015602090815260408083208054825181850281018501909352808352919290919083018282801561132d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611302575b5050505050905060005b8151811015611425578473ffffffffffffffffffffffffffffffffffffffff16828281518110611369576113696131b0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16630aa7d2f96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113df9190613193565b73ffffffffffffffffffffffffffffffffffffffff160361141d5781818151811061140c5761140c6131b0565b602002602001015192505050610e49565b600101611337565b506000949350505050565b611438611cb4565b73ffffffffffffffffffffffffffffffffffffffff811661145857600080fd5b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f1f54d231bb9d500b1923e4a1cb25e600f366a8368873d9af7c1c623814df19fc90600090a250565b60606108056006611d07565b6040805160608101825260008082526020820181905291810191909152816114fc600682611d12565b611532576040517f3c9b573900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505073ffffffffffffffffffffffffffffffffffffffff166000908152600860209081526040808320546009835281842054600a84529382902054825160608101845263ffffffff9283168152919094169281019290925260ff9092169181019190915290565b6115a1611cb4565b816115ad600682611d12565b6115e3576040517f3c9b573900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018260ff1611156115f457600080fd5b73ffffffffffffffffffffffffffffffffffffffff83166000818152600a602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff871690811790915590519092917f8a1c882c046939115ffa25c4b35cc2c2f2950b67b62295c136ecc4a6ab67f9ac91a3505050565b6000610e49600683611d12565b61168a611cb4565b61169a600b878787878787611fbf565b83858773ffffffffffffffffffffffffffffffffffffffff167f24b44a8fe42510e0d47e78dc5be1fcf5ab09678e39e793881b17b75536c1c11b8686866040516116fc93929190928352602083019190915262ffffff16604082015260600190565b60405180910390a46003546040517ff900a8b400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152600160248301529091169063f900a8b490604401600060405180830381600087803b15801561177857600080fd5b505af115801561178c573d6000803e3d6000fd5b50506002546040517f687d5dd400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152909116925063687d5dd49150602401600060405180830381600087803b1580156117fd57600080fd5b505af1158015611811573d6000803e3d6000fd5b50505050505050505050565b611825611cb4565b73ffffffffffffffffffffffffffffffffffffffff811661184557600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117825560405190917f9a2ad28991c4a863dd3516183dfda4db8e8aa1c0e550a73570b1c4616301cbc691a250565b6118ba611cb4565b6000806118c8600b846120fe565b91509150811561191b576020810151815160405173ffffffffffffffffffffffffffffffffffffffff8616907f87cc7629e5df6261b917b2a00b3640c9e8a60161f4018a2285189d10f08540e190600090a45b505050565b6000610e49600b83611d12565b611935611cb4565b80516020820151604083015161194f9260069286926121d5565b60408051825163ffffffff9081168252602080850151909116908201528282015160ff1681830152905173ffffffffffffffffffffffffffffffffffffffff8416917ff99b41a10d1100eaee0ac166534e61bcabeb6bb3a1b683368130fc6b7a5ae4e4919081900360600190a25050565b6119c8611cb4565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600f6020526040808220849055518392917fed3e1e456a52cdc00b8ea60fb4aae37d7e76d31b3e8e7a5581af66fb75e538a391a35050565b611a24611cb4565b73ffffffffffffffffffffffffffffffffffffffff8116611a4457600080fd5b60035473ffffffffffffffffffffffffffffffffffffffff1615611a94576040517f85295cee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f66a0284e74772dd27a28a7555f29db18bb60baa297a3d8bd5ca654309d6efb3890600090a250565b6060610805601661230d565b611b17611cb4565b82611b23600682611d12565b611b59576040517f3c9b573900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416600081815260086020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090811663ffffffff8a81169182179093556009909452828520805490911691881691821790559051909391927fb68a23d4ed61e96aba80d9f6099f4b9b69af02096eea143d56fb385ea97ad3d791a450505050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260156020908152604091829020805483518184028101840190945280845260609392830182828015611c7d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611c52575b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260106020526040812054610e49565b60005473ffffffffffffffffffffffffffffffffffffffff163314611d05576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6060610e498261230d565b6000611d1e8383611e14565b9392505050565b6000611d1e8373ffffffffffffffffffffffffffffffffffffffff841661231a565b60008282611d558282611e14565b6040518060400160405280600381526020017f555254000000000000000000000000000000000000000000000000000000000081525090611dcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b60405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff841660009081526002860160205260408120611dfe9042612369565b50519695505050505050565b61191b82826124b7565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001830160205260408120541515611d1e565b8383611e4f8282611e14565b6040518060400160405280600381526020017f555254000000000000000000000000000000000000000000000000000000000081525090611ebd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b5073ffffffffffffffffffffffffffffffffffffffff851660009081526002870160205260409020611ef09085856124d9565b505050505050565b60008585611f068282611e14565b6040518060400160405280600381526020017f555254000000000000000000000000000000000000000000000000000000000081525090611f74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b50611fb3868686611fab8c8c73ffffffffffffffffffffffffffffffffffffffff1660009081526002919091016020526040902090565b92919061272e565b98975050505050505050565b611fc98787611d25565b6040518060400160405280600381526020017f415254000000000000000000000000000000000000000000000000000000000081525090612037576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b5073ffffffffffffffffffffffffffffffffffffffff959095166000818152600288810160209081526040808420815180830183529889528883018581528154600180820184559287528487209a5195029099019384559751929097019190915591815260038801825284812095909555600487018152838520929092556005860182528284205560069094019093529190912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001662ffffff909216919091179055565b600061211d604051806040016040528060008152602001600081525090565b83836121298282611e14565b6040518060400160405280600381526020017f555254000000000000000000000000000000000000000000000000000000000081525090612197576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b5073ffffffffffffffffffffffffffffffffffffffff8516600090815260028701602052604090206121c8906128b5565b9097909650945050505050565b6121df8585611e14565b156040518060400160405280600381526020017f41524f00000000000000000000000000000000000000000000000000000000008152509061224e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b506122598585611d25565b5073ffffffffffffffffffffffffffffffffffffffff90931660009081526002850160209081526040808320805463ffffffff9687167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000918216179091556003880183528184208054959096169416939093179093556004909401909152909120805460ff9092167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909216919091179055565b60606000611d1e83612a93565b600081815260018301602052604081205461236157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610e49565b506000610e49565b6040805180820190915260008082526020820152825460408051808201909152600481527f49524e490000000000000000000000000000000000000000000000000000000060208201526000918591906123f0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b5084545b801561247057600181039250858381548110612412576124126131b0565b60009182526020918290206040805180820190915260029092020180548252600101549181018290529450851061244957506124af565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016123f4565b5084600081548110612484576124846131b0565b6000918252602080832060408051808201909152600290930201805483526001015490820152935091505b509250929050565b6000611d1e8373ffffffffffffffffffffffffffffffffffffffff8416612aee565b825460408051808201909152600481527f49524e490000000000000000000000000000000000000000000000000000000060208201528491612548576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b5060408051808201909152600481527f49524f460000000000000000000000000000000000000000000000000000000060208201526127108411156125ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b5060408051808201909152600481527f49525054000000000000000000000000000000000000000000000000000000006020820152428311612629576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b508354600090859061263d9060019061327a565b8154811061264d5761264d6131b0565b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050806020015183116040518060400160405280600481526020017f49524e4100000000000000000000000000000000000000000000000000000000815250906126f1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b5050604080518082019091529283525060208083019182528354600181810186556000958652919094209251600290940290920192835551910155565b835460408051808201909152600481527f49524e490000000000000000000000000000000000000000000000000000000060208201526000918691906127a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b508284106127b257600091506128ac565b85546000907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905b80156128a6576000896127ee60018461327a565b815481106127fe576127fe6131b0565b906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050905087831161283a57506128a6565b61286a8982600001516128518b8560200151612be1565b61285b8b88612bf7565b612865919061327a565b612c06565b612874908561328d565b60209091015190935091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016127da565b50909250505b50949350505050565b60006128d4604051806040016040528060008152602001600081525090565b825460408051808201909152600481527f49524e490000000000000000000000000000000000000000000000000000000060208201528491612943576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b50835460011061296f576000604051806040016040528060008152602001600081525092509250612a8d565b835460009085906129829060019061327a565b81548110612992576129926131b0565b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050806020015142106040518060400160405280600481526020017f495241410000000000000000000000000000000000000000000000000000000081525090612a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc391906131df565b5084805480612a4757612a476132a0565b60008281526020812060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909301928302018181556001908101919091559155935091505b50915091565b606081600001805480602002602001604051908101604052809291908181526020018280548015611c7d57602002820191906000526020600020905b815481526020019060010190808311612acf5750505050509050919050565b60008181526001830160205260408120548015612bd7576000612b1260018361327a565b8554909150600090612b269060019061327a565b9050818114612b8b576000866000018281548110612b4657612b466131b0565b9060005260206000200154905080876000018481548110612b6957612b696131b0565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612b9c57612b9c6132a0565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610e49565b6000915050610e49565b6000818311612bf05781611d1e565b5090919050565b6000818310612bf05781611d1e565b6000612c2f612c1583856132cf565b612c256301e133806127106132cf565b8691906001612c37565b949350505050565b600080612c45868686612c92565b90506001836002811115612c5b57612c5b6132e6565b148015612c78575060008480612c7357612c73613315565b868809115b1561125c57612c8860018261328d565b9695505050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003612cea57838281612ce057612ce0613315565b0492505050611d1e565b808411612d53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d6174683a206d756c446976206f766572666c6f7700000000000000000000006044820152606401611dc3565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114612dde57600080fd5b50565b600060208284031215612df357600080fd5b8135611d1e81612dbc565b6020808252825182820181905260009190848201906040850190845b81811015612e4c57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612e1a565b50909695505050505050565b60008060408385031215612e6b57600080fd5b8235612e7681612dbc565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b82811015612ec657815180518552860151868501529284019290850190600101612ea1565b5091979650505050505050565b60008060408385031215612ee657600080fd5b8235612ef181612dbc565b91506020830135612f0181612dbc565b809150509250929050565b803562ffffff81168114612f1f57600080fd5b919050565b60008060408385031215612f3757600080fd5b8235612f4281612dbc565b9150612f5060208401612f0c565b90509250929050565b600080600060608486031215612f6e57600080fd5b8335612f7981612dbc565b95602085013595506040909401359392505050565b60008060008060808587031215612fa457600080fd5b8435612faf81612dbc565b966020860135965060408601359560600135945092505050565b803560ff81168114612f1f57600080fd5b60008060408385031215612fed57600080fd5b8235612ff881612dbc565b9150612f5060208401612fc9565b60008060008060008060c0878903121561301f57600080fd5b863561302a81612dbc565b95506020870135945060408701359350606087013592506080870135915061305460a08801612f0c565b90509295509295509295565b803563ffffffff81168114612f1f57600080fd5b600080828403608081121561308857600080fd5b833561309381612dbc565b925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0820112156130c557600080fd5b506040516060810181811067ffffffffffffffff82111715613110577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405261311f60208501613060565b815261312d60408501613060565b602082015261313e60608501612fc9565b6040820152809150509250929050565b60008060006060848603121561316357600080fd5b833561316e81612dbc565b925061317c60208501613060565b915061318a60408501613060565b90509250925092565b6000602082840312156131a557600080fd5b8151611d1e81612dbc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208083528351808285015260005b8181101561320c578581018301518582016040015282016131f0565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610e4957610e4961324b565b80820180821115610e4957610e4961324b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b8082028115828204841417610e4957610e4961324b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122038308b452b71c9ba0fbdcf52af893801d816bd11ef0c4f86aae2ab6983fc5f2d64736f6c63430008130033";

type ChromaticMarketFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChromaticMarketFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChromaticMarketFactory__factory extends ContractFactory {
  constructor(...args: ChromaticMarketFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _marketDiamondCutFacet: string,
    _marketLoupeFacet: string,
    _marketStateFacet: string,
    _marketLiquidityFacet: string,
    _marketLiquidityLensFacet: string,
    _marketTradeFacet: string,
    _marketLiquidateFacet: string,
    _marketSettleFacet: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ChromaticMarketFactory> {
    return super.deploy(
      _marketDiamondCutFacet,
      _marketLoupeFacet,
      _marketStateFacet,
      _marketLiquidityFacet,
      _marketLiquidityLensFacet,
      _marketTradeFacet,
      _marketLiquidateFacet,
      _marketSettleFacet,
      overrides || {}
    ) as Promise<ChromaticMarketFactory>;
  }
  override getDeployTransaction(
    _marketDiamondCutFacet: string,
    _marketLoupeFacet: string,
    _marketStateFacet: string,
    _marketLiquidityFacet: string,
    _marketLiquidityLensFacet: string,
    _marketTradeFacet: string,
    _marketLiquidateFacet: string,
    _marketSettleFacet: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketDiamondCutFacet,
      _marketLoupeFacet,
      _marketStateFacet,
      _marketLiquidityFacet,
      _marketLiquidityLensFacet,
      _marketTradeFacet,
      _marketLiquidateFacet,
      _marketSettleFacet,
      overrides || {}
    );
  }
  override attach(address: string): ChromaticMarketFactory {
    return super.attach(address) as ChromaticMarketFactory;
  }
  override connect(signer: Signer): ChromaticMarketFactory__factory {
    return super.connect(signer) as ChromaticMarketFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChromaticMarketFactoryInterface {
    return new utils.Interface(_abi) as ChromaticMarketFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChromaticMarketFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChromaticMarketFactory;
  }
}
