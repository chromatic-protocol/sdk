/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ChromaticMarketFactory,
  ChromaticMarketFactoryInterface,
} from "../../../deployed/arbitrum_goerli/ChromaticMarketFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketDiamondCutFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketLoupeFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketStateFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketLiquidityFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketTradeFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketLiquidateFacet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketSettleFacet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadySetKeeperFeePayer",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadySetLiquidator",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadySetVault",
    type: "error",
  },
  {
    inputs: [],
    name: "ExistMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "NotRegisteredOracleProvider",
    type: "error",
  },
  {
    inputs: [],
    name: "NotRegisteredSettlementToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAccessableByDao",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTokenAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "annualRateBPS",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "beginTimestamp",
        type: "uint256",
      },
    ],
    name: "InterestRateRecordAppended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "annualRateBPS",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "beginTimestamp",
        type: "uint256",
      },
    ],
    name: "LastInterestRateRecordRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "MarketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "minStopLossBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxStopLossBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "minTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "leverageLevel",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IOracleProviderRegistry.OracleProviderProperties",
        name: "properties",
        type: "tuple",
      },
    ],
    name: "OracleProviderRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
    ],
    name: "OracleProviderUnregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "earningDistributionThreshold",
        type: "uint256",
      },
    ],
    name: "SetEarningDistributionThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "flashLoanFeeRate",
        type: "uint256",
      },
    ],
    name: "SetFlashLoanFeeRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "keeperFeePayer",
        type: "address",
      },
    ],
    name: "SetKeeperFeePayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "SetLiquidator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "minimumMargin",
        type: "uint256",
      },
    ],
    name: "SetMinimumMargin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint24",
        name: "uniswapFeeTier",
        type: "uint24",
      },
    ],
    name: "SetUniswapFeeTier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "SetVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "minimumMargin",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flashLoanFeeRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "earningDistributionThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "uniswapFeeTier",
        type: "uint24",
      },
    ],
    name: "SettlementTokenRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dao",
        type: "address",
      },
    ],
    name: "UpdateDao",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
    ],
    name: "UpdateLeverageLevel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "minStopLossBPS",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "maxStopLossBPS",
        type: "uint32",
      },
    ],
    name: "UpdateStopLossBPSRange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "minTakeProfitBPS",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "maxTakeProfitBPS",
        type: "uint32",
      },
    ],
    name: "UpdateTakeProfitBPSRange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "UpdateTreasury",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "annualRateBPS",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "beginTimestamp",
        type: "uint256",
      },
    ],
    name: "appendInterestRateRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "calculateInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
    ],
    name: "createMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "currentInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "annualRateBPS",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getEarningDistributionThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getFlashLoanFeeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getInterestRateRecords",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "annualRateBPS",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct InterestRate.Record[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
    ],
    name: "getMarket",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarkets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
    ],
    name: "getMarketsBySettlmentToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getMinimumMargin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
    ],
    name: "getOracleProviderProperties",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "minStopLossBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxStopLossBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "minTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "leverageLevel",
            type: "uint8",
          },
        ],
        internalType: "struct IOracleProviderRegistry.OracleProviderProperties",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getUniswapFeeTier",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "isRegisteredMarket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
    ],
    name: "isRegisteredOracleProvider",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isRegisteredSettlementToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keeperFeePayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parameters",
    outputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "minStopLossBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxStopLossBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "minTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxTakeProfitBPS",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "leverageLevel",
            type: "uint8",
          },
        ],
        internalType: "struct IOracleProviderRegistry.OracleProviderProperties",
        name: "properties",
        type: "tuple",
      },
    ],
    name: "registerOracleProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "flashLoanFeeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "earningDistributionThreshold",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "uniswapFeeTier",
        type: "uint24",
      },
    ],
    name: "registerSettlementToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registeredOracleProviders",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registeredSettlementTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeLastInterestRateRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "earningDistributionThreshold",
        type: "uint256",
      },
    ],
    name: "setEarningDistributionThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "flashLoanFeeRate",
        type: "uint256",
      },
    ],
    name: "setFlashLoanFeeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeperFeePayer",
        type: "address",
      },
    ],
    name: "setKeeperFeePayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidator",
        type: "address",
      },
    ],
    name: "setLiquidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumMargin",
        type: "uint256",
      },
    ],
    name: "setMinimumMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "uniswapFeeTier",
        type: "uint24",
      },
    ],
    name: "setUniswapFeeTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
    ],
    name: "unregisterOracleProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
    ],
    name: "updateDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
    ],
    name: "updateLeverageLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "minStopLossBPS",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxStopLossBPS",
        type: "uint32",
      },
    ],
    name: "updateStopLossBPSRange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "minTakeProfitBPS",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxTakeProfitBPS",
        type: "uint32",
      },
    ],
    name: "updateTakeProfitBPSRange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620037b3380380620037b38339810160408190526200003491620000ea565b60008054336001600160a01b031991821681179092556004805482169092179091556005805482166001600160a01b03998a16179055600680548216978916979097179096556007805487169588169590951790945560088054861693871693909317909255600980548516918616919091179055600a80548416918516919091179055600b805490921692169190911790556200017f565b80516001600160a01b0381168114620000e557600080fd5b919050565b600080600080600080600060e0888a0312156200010657600080fd5b6200011188620000cd565b96506200012160208901620000cd565b95506200013160408901620000cd565b94506200014160608901620000cd565b93506200015160808901620000cd565b92506200016160a08901620000cd565b91506200017160c08901620000cd565b905092959891949750929550565b613624806200018f6000396000f3fe608060405234801561001057600080fd5b50600436106102c85760003560e01c8063714af34b1161017b578063b38e8bc6116100d8578063ec2c90161161008c578063fbfa77cf11610071578063fbfa77cf146106c4578063fc3e9026146106e4578063fddd4d8f146106f757600080fd5b8063ec2c9016146106a9578063f7644320146106b157600080fd5b8063dc2d7f18116100bd578063dc2d7f1814610670578063e4f7b8a914610683578063ea38ff331461069657600080fd5b8063b38e8bc61461064a578063d3a5b57b1461065d57600080fd5b8063919c06531161012f578063a5563f5111610114578063a5563f5114610611578063a7f557d414610624578063a8c885af1461063757600080fd5b8063919c0653146105eb578063a1edd046146105fe57600080fd5b8063827f909f11610160578063827f909f14610514578063861bef211461051c578063890357301461058257600080fd5b8063714af34b146104ee5780637f51bb1f1461050157600080fd5b80634046ebae1161022957806361d027b3116101dd5780636817031b116101c25780636817031b146104b55780636cfaa541146104c8578063705b170e146104db57600080fd5b806361d027b31461046e57806367250c951461048e57600080fd5b80634a58e49e1161020e5780634a58e49e146104185780634ba1c3781461043b5780635b5b52c01461044e57600080fd5b80634046ebae146103b35780634162169f146103f857600080fd5b806324b101981161028057806328abb7631161026557806328abb7631461037a5780632f4ce9761461038d57806333c9d5d7146103a057600080fd5b806324b101981461034657806327633b5b1461036757600080fd5b80630ae29d04116102b15780630ae29d04146103005780630e1a4f0d14610313578063207fd1261461033357600080fd5b806301c76f81146102cd57806306216c37146102e2575b600080fd5b6102e06102db366004613069565b61070a565b005b6102ea61081a565b6040516102f79190613086565b60405180910390f35b6102e061030e3660046130e0565b61082b565b610326610321366004613069565b6108d0565b6040516102f7919061310c565b6102e061034136600461315b565b610969565b610359610354366004613069565b610d07565b6040519081526020016102f7565b610359610375366004613069565b610d1a565b610359610388366004613069565b610d45565b6102e061039b3660046130e0565b610d70565b6102e06103ae366004613069565b610e15565b6001546103d39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102f7565b6000546103d39073ffffffffffffffffffffffffffffffffffffffff1681565b61042b610426366004613069565b610eb5565b60405190151581526020016102f7565b6102e06104493660046131ac565b610ec2565b6003546103d39073ffffffffffffffffffffffffffffffffffffffff1681565b6004546103d39073ffffffffffffffffffffffffffffffffffffffff1681565b6104a161049c366004613069565b610f95565b60405162ffffff90911681526020016102f7565b6102e06104c3366004613069565b610fc5565b6102e06104d63660046131e1565b6110d5565b6103596104e9366004613216565b61117d565b6103d36104fc36600461315b565b611196565b6102e061050f366004613069565b611361565b6102ea611421565b61052f61052a366004613069565b61142d565b6040516102f79190600060a08201905063ffffffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060ff608084015116608083015292915050565b6105be60408051808201909152601a5473ffffffffffffffffffffffffffffffffffffffff908116808352601b54909116602090920182905291565b6040805173ffffffffffffffffffffffffffffffffffffffff9384168152929091166020830152016102f7565b6102e06105f9366004613262565b61151d565b61042b61060c366004613069565b611642565b6102e061061f3660046132a2565b61164f565b6102e06106323660046132e7565b611797565b6102e0610645366004613069565b61197b565b6102e0610658366004613069565b611a39565b6102e061066b366004613341565b611af0565b61042b61067e366004613069565b611c01565b6102e06106913660046130e0565b611c0e565b6102e06106a4366004613069565b611cb3565b6102ea611dc3565b6102e06106bf3660046132a2565b611dcf565b6002546103d39073ffffffffffffffffffffffffffffffffffffffff1681565b6102ea6106f2366004613069565b611f02565b610359610705366004613069565b611f92565b60005473ffffffffffffffffffffffffffffffffffffffff16331461075b576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff16156107ab576040517fb209caed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f111c6aeb2006d748bdae2ddf082866e6ce7eb3d48ef324b5d9547570f5694e4f90600090a250565b60606108266013611fbd565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff16331461087c576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216600081815260166020526040808220849055518392917f4c0223e719940189ef3681b9c0f0450c816c7a262c1963087e3a4911f3bccf5191a35050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152601560205260409020606090805480602002602001604051908101604052809291908181526020016000905b8282101561095e57838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610918565b505050509050919050565b81610975600c82611fc8565b6109ab576040517f3c9b573900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109b6601383611fc8565b6109ec576040517f12a5f55200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8084166000908152601c602090815260408083209386168352929052205460ff1615610a59576040517fde70de2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600554600654600754600854600954600a54600b546040517faeb856e3000000000000000000000000000000000000000000000000000000008152601a600482015273ffffffffffffffffffffffffffffffffffffffff808c166024830152808b1660448301529788166064820152958716608487015293861660a486015291851660c4850152841660e484015283166101048301529190911661012482015260009073e74815B552cFBe079709f69ffa794B2eca02B68A9063aeb856e39061014401602060405180830381865af4158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d919061343d565b73ffffffffffffffffffffffffffffffffffffffff8581166000908152601c6020908152604080832088851684528252808320805460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091168117909155601d835290832080549182018155835291200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169183169190911790559050610c0a601e82611fdb565b506002546040517fc440a65c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301529091169063c440a65c90602401600060405180830381600087803b158015610c7857600080fd5b505af1158015610c8c573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fe63e6130091e2155004c4b5ac35e8fb9be704d6637ff3068a8f710ba36c9f41a60405160405180910390a450505050565b6000610d14601383611ffd565b92915050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260166020526040812054610d14565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260176020526040812054610d14565b60005473ffffffffffffffffffffffffffffffffffffffff163314610dc1576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216600081815260186020526040808220849055518392917fad9146057238aa90fc2f022eed688ed9c094d5b01a070c1d9ed7140ae1e90b5a91a35050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e66576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e71600c826120c0565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f2204279f4b3dc089ca3bb773580383cc44d6d1414667f78def48751c811422d090600090a250565b6000610d14601e836120ca565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f13576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660008181526019602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001662ffffff861690811790915590519092917fdb5545d4da29cde71057a77fa9788f26638ed7c232145a360e250d112462286a91a35050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526019602052604081205462ffffff16610d14565b60005473ffffffffffffffffffffffffffffffffffffffff163314611016576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025473ffffffffffffffffffffffffffffffffffffffff1615611066576040517fb661034d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090600090a250565b60005473ffffffffffffffffffffffffffffffffffffffff163314611126576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61113360138484846120f9565b80828473ffffffffffffffffffffffffffffffffffffffff167ff88fac6bf5acd4c3248b702ace956ada3aed01acc26526e8d25e264af2bd28e860405160405180910390a4505050565b600061118d6013868686866121ae565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8083166000908152601c6020908152604080832093851683529290529081205460ff166111da57506000610d14565b73ffffffffffffffffffffffffffffffffffffffff82166000908152601d602090815260408083208054825181850281018501909352808352919290919083018282801561125e57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611233575b5050505050905060005b8151811015611356578473ffffffffffffffffffffffffffffffffffffffff1682828151811061129a5761129a61345a565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16630aa7d2f96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611310919061343d565b73ffffffffffffffffffffffffffffffffffffffff160361134e5781818151811061133d5761133d61345a565b602002602001015192505050610d14565b600101611268565b506000949350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146113b2576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f1f54d231bb9d500b1923e4a1cb25e600f366a8368873d9af7c1c623814df19fc90600090a250565b6060610826600c611fbd565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915281611464600c82611fc8565b61149a576040517f3c9b573900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505073ffffffffffffffffffffffffffffffffffffffff166000908152600e6020908152604080832054600f83528184205460108452828520546011855283862054601286529584902054845160a08101865263ffffffff948516815292841695830195909552821692810192909252909216606083015260ff16608082015290565b60005473ffffffffffffffffffffffffffffffffffffffff16331461156e576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161157a600c82611fc8565b6115b0576040517f3c9b573900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018260ff1611156115c157600080fd5b73ffffffffffffffffffffffffffffffffffffffff831660008181526012602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff871690811790915590519092917f8a1c882c046939115ffa25c4b35cc2c2f2950b67b62295c136ecc4a6ab67f9ac91a3505050565b6000610d14600c83611fc8565b60005473ffffffffffffffffffffffffffffffffffffffff1633146116a0576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826116ac600c82611fc8565b6116e2576040517f3c9b573900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6127108263ffffffff1611156116f757600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000818152600e6020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090811663ffffffff8a8116918217909355600f909452828520805490911691881691821790559051909391927f70ef0a4d159bd097972773f7395802bec6e4d3127c97de7567eee33caa5c61cb91a450505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146117e8576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117f86013878787878787612275565b6003546040517ff900a8b400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152600160248301529091169063f900a8b490604401600060405180830381600087803b15801561186c57600080fd5b505af1158015611880573d6000803e3d6000fd5b50506002546040517f687d5dd400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152909116925063687d5dd49150602401600060405180830381600087803b1580156118f157600080fd5b505af1158015611905573d6000803e3d6000fd5b5050505083858773ffffffffffffffffffffffffffffffffffffffff167f24b44a8fe42510e0d47e78dc5be1fcf5ab09678e39e793881b17b75536c1c11b86868660405161196b93929190928352602083019190915262ffffff16604082015260600190565b60405180910390a4505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146119cc576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117825560405190917f9a2ad28991c4a863dd3516183dfda4db8e8aa1c0e550a73570b1c4616301cbc691a250565b60005473ffffffffffffffffffffffffffffffffffffffff163314611a8a576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080611a986013846123b4565b915091508115611aeb576020810151815160405173ffffffffffffffffffffffffffffffffffffffff8616907f87cc7629e5df6261b917b2a00b3640c9e8a60161f4018a2285189d10f08540e190600090a45b505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611b41576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80516020820151604083015160608401516080850151611b6994600c9488949193909261248b565b8173ffffffffffffffffffffffffffffffffffffffff167f5cef7499e47fb5419b26f816ab79805cd7250fc37ba5b66e48e7782557656f6b82604051611bf59190600060a08201905063ffffffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060ff608084015116608083015292915050565b60405180910390a25050565b6000610d14601383611fc8565b60005473ffffffffffffffffffffffffffffffffffffffff163314611c5f576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216600081815260176020526040808220849055518392917fed3e1e456a52cdc00b8ea60fb4aae37d7e76d31b3e8e7a5581af66fb75e538a391a35050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611d04576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035473ffffffffffffffffffffffffffffffffffffffff1615611d54576040517f85295cee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f66a0284e74772dd27a28a7555f29db18bb60baa297a3d8bd5ca654309d6efb3890600090a250565b6060610826601e6125f2565b60005473ffffffffffffffffffffffffffffffffffffffff163314611e20576040517f808ca14f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82611e2c600c82611fc8565b611e62576040517f3c9b573900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416600081815260106020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090811663ffffffff8a81169182179093556011909452828520805490911691881691821790559051909391927fb68a23d4ed61e96aba80d9f6099f4b9b69af02096eea143d56fb385ea97ad3d791a450505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152601d6020908152604091829020805483518184028101840190945280845260609392830182828015611f8657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611f5b575b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260186020526040812054610d14565b6060610d14826125f2565b6000611fd483836120ca565b9392505050565b6000611fd48373ffffffffffffffffffffffffffffffffffffffff84166125ff565b6000828261200b82826120ca565b6040518060400160405280600381526020017f555254000000000000000000000000000000000000000000000000000000000081525090612082576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b60405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff8416600090815260028601602052604081206120b4904261264e565b50519695505050505050565b611aeb828261279c565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001830160205260408120541515611fd4565b838361210582826120ca565b6040518060400160405280600381526020017f555254000000000000000000000000000000000000000000000000000000000081525090612173576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b5073ffffffffffffffffffffffffffffffffffffffff8516600090815260028701602052604090206121a69085856127be565b505050505050565b600085856121bc82826120ca565b6040518060400160405280600381526020017f55525400000000000000000000000000000000000000000000000000000000008152509061222a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b506122698686866122618c8c73ffffffffffffffffffffffffffffffffffffffff1660009081526002919091016020526040902090565b929190612a13565b98975050505050505050565b61227f8787611fdb565b6040518060400160405280600381526020017f4152540000000000000000000000000000000000000000000000000000000000815250906122ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b5073ffffffffffffffffffffffffffffffffffffffff959095166000818152600288810160209081526040808420815180830183529889528883018581528154600180820184559287528487209a5195029099019384559751929097019190915591815260038801825284812095909555600487018152838520929092556005860182528284205560069094019093529190912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001662ffffff909216919091179055565b60006123d3604051806040016040528060008152602001600081525090565b83836123df82826120ca565b6040518060400160405280600381526020017f55525400000000000000000000000000000000000000000000000000000000008152509061244d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b5073ffffffffffffffffffffffffffffffffffffffff85166000908152600287016020526040902061247e90612b9a565b9097909650945050505050565b61249587876120ca565b156040518060400160405280600381526020017f41524f000000000000000000000000000000000000000000000000000000000081525090612504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b5061250f8787611fdb565b5073ffffffffffffffffffffffffffffffffffffffff959095166000908152600287016020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090811663ffffffff998a161790915560038a018352818420805482169789169790971790965560048901825280832080548716958816959095179094556005880181528382208054909516929095169190911790925560069094019091529190912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff909216919091179055565b60606000611fd483612d78565b600081815260018301602052604081205461264657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610d14565b506000610d14565b6040805180820190915260008082526020820152825460408051808201909152600481527f49524e490000000000000000000000000000000000000000000000000000000060208201526000918591906126d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b5084545b8015612755576001810392508583815481106126f7576126f761345a565b60009182526020918290206040805180820190915260029092020180548252600101549181018290529450851061272e5750612794565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016126d9565b50846000815481106127695761276961345a565b6000918252602080832060408051808201909152600290930201805483526001015490820152935091505b509250929050565b6000611fd48373ffffffffffffffffffffffffffffffffffffffff8416612dd3565b825460408051808201909152600481527f49524e49000000000000000000000000000000000000000000000000000000006020820152849161282d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b5060408051808201909152600481527f49524f4600000000000000000000000000000000000000000000000000000000602082015261271084111561289f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b5060408051808201909152600481527f4952505400000000000000000000000000000000000000000000000000000000602082015242831161290e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b508354600090859061292290600190613524565b815481106129325761293261345a565b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050806020015183116040518060400160405280600481526020017f49524e4100000000000000000000000000000000000000000000000000000000815250906129d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b5050604080518082019091529283525060208083019182528354600181810186556000958652919094209251600290940290920192835551910155565b835460408051808201909152600481527f49524e49000000000000000000000000000000000000000000000000000000006020820152600091869190612a86576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b50828410612a975760009150612b91565b85546000907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905b8015612b8b57600089612ad3600184613524565b81548110612ae357612ae361345a565b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050878311612b1f5750612b8b565b612b4f898260000151612b368b8560200151612ec6565b612b408b88612edc565b612b4a9190613524565b612eeb565b612b599085613537565b60209091015190935091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01612abf565b50909250505b50949350505050565b6000612bb9604051806040016040528060008152602001600081525090565b825460408051808201909152600481527f49524e490000000000000000000000000000000000000000000000000000000060208201528491612c28576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b508354600110612c54576000604051806040016040528060008152602001600081525092509250612d72565b83546000908590612c6790600190613524565b81548110612c7757612c7761345a565b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050806020015142106040518060400160405280600481526020017f495241410000000000000000000000000000000000000000000000000000000081525090612d1b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120799190613489565b5084805480612d2c57612d2c61354a565b60008281526020812060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909301928302018181556001908101919091559155935091505b50915091565b606081600001805480602002602001604051908101604052809291908181526020018280548015611f8657602002820191906000526020600020905b815481526020019060010190808311612db45750505050509050919050565b60008181526001830160205260408120548015612ebc576000612df7600183613524565b8554909150600090612e0b90600190613524565b9050818114612e70576000866000018281548110612e2b57612e2b61345a565b9060005260206000200154905080876000018481548110612e4e57612e4e61345a565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612e8157612e8161354a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610d14565b6000915050610d14565b6000818311612ed55781611fd4565b5090919050565b6000818310612ed55781611fd4565b6000612f14612efa8385613579565b612f0a6301e13380612710613579565b8691906001612f1c565b949350505050565b600080612f2a868686612f77565b90506001836002811115612f4057612f40613590565b148015612f5d575060008480612f5857612f586135bf565b868809115b1561118d57612f6d600182613537565b9695505050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003612fcf57838281612fc557612fc56135bf565b0492505050611fd4565b808411612fdb57600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461306657600080fd5b50565b60006020828403121561307b57600080fd5b8135611fd481613044565b6020808252825182820181905260009190848201906040850190845b818110156130d457835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016130a2565b50909695505050505050565b600080604083850312156130f357600080fd5b82356130fe81613044565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b8281101561314e57815180518552860151868501529284019290850190600101613129565b5091979650505050505050565b6000806040838503121561316e57600080fd5b823561317981613044565b9150602083013561318981613044565b809150509250929050565b803562ffffff811681146131a757600080fd5b919050565b600080604083850312156131bf57600080fd5b82356131ca81613044565b91506131d860208401613194565b90509250929050565b6000806000606084860312156131f657600080fd5b833561320181613044565b95602085013595506040909401359392505050565b6000806000806080858703121561322c57600080fd5b843561323781613044565b966020860135965060408601359560600135945092505050565b803560ff811681146131a757600080fd5b6000806040838503121561327557600080fd5b823561328081613044565b91506131d860208401613251565b803563ffffffff811681146131a757600080fd5b6000806000606084860312156132b757600080fd5b83356132c281613044565b92506132d06020850161328e565b91506132de6040850161328e565b90509250925092565b60008060008060008060c0878903121561330057600080fd5b863561330b81613044565b95506020870135945060408701359350606087013592506080870135915061333560a08801613194565b90509295509295509295565b60008082840360c081121561335557600080fd5b833561336081613044565b925060a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561339257600080fd5b5060405160a0810181811067ffffffffffffffff821117156133dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040526133ec6020850161328e565b81526133fa6040850161328e565b602082015261340b6060850161328e565b604082015261341c6080850161328e565b606082015261342d60a08501613251565b6080820152809150509250929050565b60006020828403121561344f57600080fd5b8151611fd481613044565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208083528351808285015260005b818110156134b65785810183015185820160400152820161349a565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610d1457610d146134f5565b80820180821115610d1457610d146134f5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b8082028115828204841417610d1457610d146134f5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212205d18d29c5f750e7b648a3efb2248aa7e05ea441628e075dc493b2ddd0ae778e864736f6c63430008130033";

type ChromaticMarketFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChromaticMarketFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChromaticMarketFactory__factory extends ContractFactory {
  constructor(...args: ChromaticMarketFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _marketDiamondCutFacet: PromiseOrValue<string>,
    _marketLoupeFacet: PromiseOrValue<string>,
    _marketStateFacet: PromiseOrValue<string>,
    _marketLiquidityFacet: PromiseOrValue<string>,
    _marketTradeFacet: PromiseOrValue<string>,
    _marketLiquidateFacet: PromiseOrValue<string>,
    _marketSettleFacet: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChromaticMarketFactory> {
    return super.deploy(
      _marketDiamondCutFacet,
      _marketLoupeFacet,
      _marketStateFacet,
      _marketLiquidityFacet,
      _marketTradeFacet,
      _marketLiquidateFacet,
      _marketSettleFacet,
      overrides || {}
    ) as Promise<ChromaticMarketFactory>;
  }
  override getDeployTransaction(
    _marketDiamondCutFacet: PromiseOrValue<string>,
    _marketLoupeFacet: PromiseOrValue<string>,
    _marketStateFacet: PromiseOrValue<string>,
    _marketLiquidityFacet: PromiseOrValue<string>,
    _marketTradeFacet: PromiseOrValue<string>,
    _marketLiquidateFacet: PromiseOrValue<string>,
    _marketSettleFacet: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketDiamondCutFacet,
      _marketLoupeFacet,
      _marketStateFacet,
      _marketLiquidityFacet,
      _marketTradeFacet,
      _marketLiquidateFacet,
      _marketSettleFacet,
      overrides || {}
    );
  }
  override attach(address: string): ChromaticMarketFactory {
    return super.attach(address) as ChromaticMarketFactory;
  }
  override connect(signer: Signer): ChromaticMarketFactory__factory {
    return super.connect(signer) as ChromaticMarketFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChromaticMarketFactoryInterface {
    return new utils.Interface(_abi) as ChromaticMarketFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChromaticMarketFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChromaticMarketFactory;
  }
}
