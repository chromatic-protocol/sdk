/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestSettlementToken,
  TestSettlementTokenInterface,
} from "../../../deployed/arbitrum_goerli/TestSettlementToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "faucetAmount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "faucetMinInterval_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyFaucetedInInterval",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "faucetAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucetMinInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "faucetAmount_",
        type: "uint256",
      },
    ],
    name: "setFaucetAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "faucetMinInterval_",
        type: "uint256",
      },
    ],
    name: "setFaucetMinInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "setSymbol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001658380380620016588339810160408190526200003491620001d5565b6040805160208082018352600080835283519182019093529182529060036200005e8382620002de565b5060046200006d8282620002de565b5050506200008a62000084620000ba60201b60201c565b620000be565b6006620000988582620002de565b506007620000a78482620002de565b5060089190915560095550620003aa9050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013857600080fd5b81516001600160401b038082111562000155576200015562000110565b604051601f8301601f19908116603f0116810190828211818310171562000180576200018062000110565b816040528381526020925086838588010111156200019d57600080fd5b600091505b83821015620001c15785820183015181830184015290820190620001a2565b600093810190920192909252949350505050565b60008060008060808587031215620001ec57600080fd5b84516001600160401b03808211156200020457600080fd5b620002128883890162000126565b955060208701519150808211156200022957600080fd5b50620002388782880162000126565b604087015160609097015195989097509350505050565b600181811c908216806200026457607f821691505b6020821081036200028557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d957600081815260208120601f850160051c81016020861015620002b45750805b601f850160051c820191505b81811015620002d557828155600101620002c0565b5050505b505050565b81516001600160401b03811115620002fa57620002fa62000110565b62000312816200030b84546200024f565b846200028b565b602080601f8311600181146200034a5760008415620003315750858301515b600019600386901b1c1916600185901b178555620002d5565b600085815260208120601f198616915b828110156200037b578886015182559484019460019091019084016200035a565b50858210156200039a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61129e80620003ba6000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80638b85eb03116100d8578063a9059cbb1161008c578063dd62ed3e11610066578063dd62ed3e14610314578063de5f72fd1461035a578063f2fde38b1461036257600080fd5b8063a9059cbb146102db578063b84c8246146102ee578063c47f00271461030157600080fd5b806395d89b41116100bd57806395d89b41146102b85780639c281430146102c0578063a457c2d7146102c857600080fd5b80638b85eb03146102885780638da5cb5b1461029057600080fd5b8063313ce5671161013a57806370a082311161011457806370a0823114610237578063715018a61461026d57806381d2fd9c1461027557600080fd5b8063313ce56714610202578063395093511461021157806340c10f191461022457600080fd5b806318160ddd1161016b57806318160ddd146101c85780632183d566146101da57806323b872dd146101ef57600080fd5b806306fdde0314610187578063095ea7b3146101a5575b600080fd5b61018f610375565b60405161019c9190610df1565b60405180910390f35b6101b86101b3366004610e86565b610407565b604051901515815260200161019c565b6002545b60405190815260200161019c565b6101ed6101e8366004610eb0565b610421565b005b6101b86101fd366004610ec9565b61042e565b6040516012815260200161019c565b6101b861021f366004610e86565b610452565b6101ed610232366004610e86565b61049e565b6101cc610245366004610f05565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101ed6104b4565b6101ed610283366004610eb0565b6104c8565b6009546101cc565b60055460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019c565b61018f6104d5565b6008546101cc565b6101b86102d6366004610e86565b6104e4565b6101b86102e9366004610e86565b6105ba565b6101ed6102fc366004610f56565b6105c8565b6101ed61030f366004610f56565b6105dc565b6101cc610322366004611025565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101ed6105f0565b6101ed610370366004610f05565b610651565b60606006805461038490611058565b80601f01602080910402602001604051908101604052809291908181526020018280546103b090611058565b80156103fd5780601f106103d2576101008083540402835291602001916103fd565b820191906000526020600020905b8154815290600101906020018083116103e057829003601f168201915b5050505050905090565b600033610415818585610708565b60019150505b92915050565b6104296108bb565b600955565b60003361043c85828561093c565b610447858585610a13565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061041590829086906104999087906110da565b610708565b6104a66108bb565b6104b08282610c82565b5050565b6104bc6108bb565b6104c66000610d75565b565b6104d06108bb565b600855565b60606007805461038490611058565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156105ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104478286868403610708565b600033610415818585610a13565b6105d06108bb565b60076104b0828261113b565b6105e46108bb565b60066104b0828261113b565b600954336000908152600a602052604090205461060d9042611255565b1015610645576040517fe232c97a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104c633600854610c82565b6106596108bb565b73ffffffffffffffffffffffffffffffffffffffff81166106fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105a4565b61070581610d75565b50565b73ffffffffffffffffffffffffffffffffffffffff83166107aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016105a4565b73ffffffffffffffffffffffffffffffffffffffff821661084d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016105a4565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60055473ffffffffffffffffffffffffffffffffffffffff1633146104c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a4565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a0d5781811015610a00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105a4565b610a0d8484848403610708565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610ab6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016105a4565b73ffffffffffffffffffffffffffffffffffffffff8216610b59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016105a4565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610c0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016105a4565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a0d565b73ffffffffffffffffffffffffffffffffffffffff8216610cff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105a4565b8060026000828254610d1191906110da565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b505050565b600060208083528351808285015260005b81811015610e1e57858101830151858201604001528201610e02565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e8157600080fd5b919050565b60008060408385031215610e9957600080fd5b610ea283610e5d565b946020939093013593505050565b600060208284031215610ec257600080fd5b5035919050565b600080600060608486031215610ede57600080fd5b610ee784610e5d565b9250610ef560208501610e5d565b9150604084013590509250925092565b600060208284031215610f1757600080fd5b610f2082610e5d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215610f6857600080fd5b813567ffffffffffffffff80821115610f8057600080fd5b818401915084601f830112610f9457600080fd5b813581811115610fa657610fa6610f27565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610fec57610fec610f27565b8160405282815287602084870101111561100557600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806040838503121561103857600080fd5b61104183610e5d565b915061104f60208401610e5d565b90509250929050565b600181811c9082168061106c57607f821691505b6020821081036110a5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561041b5761041b6110ab565b601f821115610dec57600081815260208120601f850160051c810160208610156111145750805b601f850160051c820191505b8181101561113357828155600101611120565b505050505050565b815167ffffffffffffffff81111561115557611155610f27565b611169816111638454611058565b846110ed565b602080601f8311600181146111bc57600084156111865750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611133565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611209578886015182559484019460019091019084016111ea565b508582101561124557878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561041b5761041b6110ab56fea26469706673582212200b3f21a31616de73ea41be7e08e0663b1c8b508937cf3e5a559a73e26b0368b664736f6c63430008130033";

type TestSettlementTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestSettlementTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestSettlementToken__factory extends ContractFactory {
  constructor(...args: TestSettlementTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    symbol_: string,
    faucetAmount_: BigNumberish,
    faucetMinInterval_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<TestSettlementToken> {
    return super.deploy(
      name_,
      symbol_,
      faucetAmount_,
      faucetMinInterval_,
      overrides || {}
    ) as Promise<TestSettlementToken>;
  }
  override getDeployTransaction(
    name_: string,
    symbol_: string,
    faucetAmount_: BigNumberish,
    faucetMinInterval_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      faucetAmount_,
      faucetMinInterval_,
      overrides || {}
    );
  }
  override attach(address: string): TestSettlementToken {
    return super.attach(address) as TestSettlementToken;
  }
  override connect(signer: Signer): TestSettlementToken__factory {
    return super.connect(signer) as TestSettlementToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestSettlementTokenInterface {
    return new utils.Interface(_abi) as TestSettlementTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestSettlementToken {
    return new Contract(address, _abi, signerOrProvider) as TestSettlementToken;
  }
}
