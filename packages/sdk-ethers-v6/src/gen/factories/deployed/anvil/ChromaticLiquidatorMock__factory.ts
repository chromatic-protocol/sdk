/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ChromaticLiquidatorMock,
  ChromaticLiquidatorMockInterface,
} from "../../../deployed/anvil/ChromaticLiquidatorMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IChromaticMarketFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_automate",
        type: "address",
      },
      {
        internalType: "address",
        name: "opsProxyFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyAccessableByDao",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAccessableByMarket",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
    ],
    name: "UpdateClaimInterval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
    ],
    name: "UpdateLiquidationInterval",
    type: "event",
  },
  {
    inputs: [],
    name: "automate",
    outputs: [
      {
        internalType: "contract IAutomate",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "cancelClaimPositionTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "cancelLiquidationTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "claimPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "createClaimPositionTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "createLiquidationTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dedicatedMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "resolveClaimPosition",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "resolveLiquidation",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
    ],
    name: "updateClaimInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
    ],
    name: "updateLiquidationInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001304380380620013048339810160408190526200003491620001a3565b600080546001600160a01b0319166001600160a01b0385811691909117909155603c60015562015180600255821660808190526040805163573ea57560e01b8152905185928592859284923092859263573ea575916004808201926020929091908290030181865afa158015620000af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d59190620001f7565b6001600160a01b0390811660c052811662000101575073c815db16d4be6ddf2685c201937905abf338f5d75b6040516337b6269f60e21b81526001600160a01b03838116600483015282169063ded89a7c906024016040805180830381865afa15801562000147573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200016d91906200021e565b506001600160a01b031660a0525062000261975050505050505050565b6001600160a01b0381168114620001a057600080fd5b50565b600080600060608486031215620001b957600080fd5b8351620001c6816200018a565b6020850151909350620001d9816200018a565b6040850151909250620001ec816200018a565b809150509250925092565b6000602082840312156200020a57600080fd5b815162000217816200018a565b9392505050565b600080604083850312156200023257600080fd5b82516200023f816200018a565b602084015190925080151581146200025657600080fd5b809150509250929050565b60805160a05160c051611054620002b060003960005050600061019501526000818160ff015281816107230152818161084d01528181610b4601528181610c4a0152610ce501526110546000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063369e97171161009757806396f823b41161006657806396f823b41461021a578063bcbaf4871461022d578063cec418ef14610240578063e9fcf1f61461025357600080fd5b8063369e9717146101d8578063373fa760146101e15780637bd5d063146101f45780638e2cdf681461020757600080fd5b8063139f34cf116100d3578063139f34cf1461016a578063206e8f321461017d57806328f150eb146101905780633011e5d4146101b757600080fd5b8063049aacfe146100fa5780630710285c1461013e5780630b433a1214610153575b600080fd5b6101217f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61015161014c366004610d1e565b610266565b005b61015c60025481565b604051908152602001610135565b610151610178366004610d53565b610276565b61015161018b366004610d53565b61030d565b6101217f000000000000000000000000000000000000000000000000000000000000000081565b6101ca6101c5366004610d6c565b610340565b604051610135929190610dde565b61015c60015481565b6101516101ef366004610d53565b61042d565b6101ca610202366004610d6c565b6104d3565b610151610215366004610d53565b610573565b610151610228366004610d53565b610619565b61015161023b366004610d6c565b6106ad565b61015161024e366004610d53565b6106c5565b610151610261366004610d6c565b6106f8565b610271838383610710565b505050565b60005460405163252c724f60e11b81523360048201526001600160a01b0390911690634a58e49e90602401602060405180830381865afa1580156102be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e29190610e01565b6102ff57604051631353f3f160e01b815260040160405180910390fd5b61030a600482610810565b50565b600281905560405181907f147643a3380a07b720e58d29bed784fd77f5778aaf06610663435736d29a776d90600090a250565b60405163627c32d960e11b8152600481018290526000906060906001600160a01b0385169063c4f865b290602401602060405180830381865afa15801561038b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103af9190610e01565b15610412576040516001600160a01b038516602482015260448101849052600190309063e9fcf1f6906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505091509150610426565b505060408051602081019091526000808252905b9250929050565b60005460405163252c724f60e11b81523360048201526001600160a01b0390911690634a58e49e90602401602060405180830381865afa158015610475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104999190610e01565b6104b657604051631353f3f160e01b815260040160405180910390fd5b61030a600482306001600160a01b0316633011e5d46002546108d2565b60405163b86f6aef60e01b8152600481018290526000906060906001600160a01b0385169063b86f6aef90602401602060405180830381865afa15801561051e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105429190610e01565b15610412576040516001600160a01b038516602482015260448101849052600190309063bcbaf487906064016103dc565b60005460405163252c724f60e11b81523360048201526001600160a01b0390911690634a58e49e90602401602060405180830381865afa1580156105bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105df9190610e01565b6105fc57604051631353f3f160e01b815260040160405180910390fd5b61030a600382306001600160a01b0316637bd5d0636001546108d2565b60005460405163252c724f60e11b81523360048201526001600160a01b0390911690634a58e49e90602401602060405180830381865afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190610e01565b6106a257604051631353f3f160e01b815260040160405180910390fd5b61030a600382610810565b60006106b7610c45565b509050610271838383610710565b600181905560405181907fa60f93af5f46f4a9093acf49a5642d02b04c7d56297737df82bf0cf63f0fb6d990600090a250565b6000610702610c45565b509050610271838383610cd2565b826001600160a01b0381166379bd1eac847f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b031663573ea5756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a49190610e2a565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260448101859052606401600060405180830381600087803b1580156107f257600080fd5b505af1158015610806573d6000803e3d6000fd5b5050505050505050565b3360008181526020848152604080832085845290915290205480156108cc5760405163ee8ca3b560e01b8152600481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ee8ca3b590602401600060405180830381600087803b15801561089157600080fd5b505af11580156108a5573d6000803e3d6000fd5b5050506001600160a01b038316600090815260208681526040808320878452909152812055505b50505050565b33600081815260208781526040808320888452909152902054156108f65750610c3e565b60408051600381830181815260c083019093526000928291606080840190803683370190505081526040805160038082526080820190925260209092019190816020015b606081526020019060019003908161093a575050905280518051919250600091829061096857610968610e47565b6020026020010190600381111561098157610981610e5d565b9081600381111561099457610994610e5d565b81525050600181600001516001815181106109b1576109b1610e47565b602002602001019060038111156109ca576109ca610e5d565b908160038111156109dd576109dd610e5d565b81525050600281600001516002815181106109fa576109fa610e47565b60200260200101906003811115610a1357610a13610e5d565b90816003811115610a2657610a26610e5d565b905250604080516001600160a01b038416602482015260448082018990528251808303909101815260649091018252602080820180516001600160e01b031660e089901b1790529151610a7c9230929101610e73565b6040516020818303038152906040528160200151600081518110610aa257610aa2610e47565b6020908102919091010152610ab78342610e97565b604080516fffffffffffffffffffffffffffffffff9283166020820152918516908201526060016040516020818303038152906040528160200151600181518110610b0457610b04610e47565b6020026020010181905250604051806020016040528060008152508160200151600281518110610b3657610b36610e47565b6020026020010181905250610b687f000000000000000000000000000000000000000000000000000000000000000090565b6040805163bcbaf48760e01b60208201526001600160a01b039290921691633323b467913091016040516020818303038152906040528473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6040518563ffffffff1660e01b8152600401610bd39493929190610f13565b6020604051808303816000875af1158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c169190610fd5565b6001600160a01b03909216600090815260208881526040808320898452909152902091909155505b5050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b810c6366040518163ffffffff1660e01b81526004016040805180830381865afa158015610ca5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc99190610fee565b90939092509050565b826001600160a01b03811663de7c8cc2847f0000000000000000000000000000000000000000000000000000000000000000610743565b6001600160a01b038116811461030a57600080fd5b600080600060608486031215610d3357600080fd5b8335610d3e81610d09565b95602085013595506040909401359392505050565b600060208284031215610d6557600080fd5b5035919050565b60008060408385031215610d7f57600080fd5b8235610d8a81610d09565b946020939093013593505050565b6000815180845260005b81811015610dbe57602081850181015186830182015201610da2565b506000602082860101526020601f19601f83011685010191505092915050565b8215158152604060208201526000610df96040830184610d98565b949350505050565b600060208284031215610e1357600080fd5b81518015158114610e2357600080fd5b9392505050565b600060208284031215610e3c57600080fd5b8151610e2381610d09565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0383168152604060208201819052600090610df990830184610d98565b80820180821115610eb857634e487b7160e01b600052601160045260246000fd5b92915050565b600081518084526020808501808196508360051b8101915082860160005b85811015610f06578284038952610ef4848351610d98565b98850198935090840190600101610edc565b5091979650505050505050565b6001600160a01b038516815260806020808301829052600091610f3890840187610d98565b838103604080860191909152865181835280519183018290528301906000906060840190825b81811015610f975784516004808210610f8457634e487b7160e01b865260218152602486fd5b5083529386019391860191600101610f5e565b505084890151925083810385850152610fb08184610ebe565b95505050505050610fcc60608301846001600160a01b03169052565b95945050505050565b600060208284031215610fe757600080fd5b5051919050565b6000806040838503121561100157600080fd5b82519150602083015161101381610d09565b80915050925092905056fea2646970667358221220402e1eddfc2a9379078c6708eb4f19e2d51615dbd48d318302c26b6bcef8702464736f6c63430008130033";

type ChromaticLiquidatorMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChromaticLiquidatorMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChromaticLiquidatorMock__factory extends ContractFactory {
  constructor(...args: ChromaticLiquidatorMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factory: AddressLike,
    _automate: AddressLike,
    opsProxyFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _factory,
      _automate,
      opsProxyFactory,
      overrides || {}
    );
  }
  override deploy(
    _factory: AddressLike,
    _automate: AddressLike,
    opsProxyFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _factory,
      _automate,
      opsProxyFactory,
      overrides || {}
    ) as Promise<
      ChromaticLiquidatorMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ChromaticLiquidatorMock__factory {
    return super.connect(runner) as ChromaticLiquidatorMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChromaticLiquidatorMockInterface {
    return new Interface(_abi) as ChromaticLiquidatorMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ChromaticLiquidatorMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ChromaticLiquidatorMock;
  }
}
