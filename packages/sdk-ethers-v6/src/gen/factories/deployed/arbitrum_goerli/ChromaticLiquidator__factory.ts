/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ChromaticLiquidator,
  ChromaticLiquidatorInterface,
} from "../../../deployed/arbitrum_goerli/ChromaticLiquidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IChromaticMarketFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_automate",
        type: "address",
      },
      {
        internalType: "address",
        name: "opsProxyFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyAccessableByDao",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAccessableByMarket",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
    ],
    name: "UpdateClaimInterval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
    ],
    name: "UpdateLiquidationInterval",
    type: "event",
  },
  {
    inputs: [],
    name: "automate",
    outputs: [
      {
        internalType: "contract IAutomate",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "cancelClaimPositionTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "cancelLiquidationTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "claimPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "createClaimPositionTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "createLiquidationTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dedicatedMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "getClaimPositionTaskId",
    outputs: [
      {
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "getLiquidationTaskId",
    outputs: [
      {
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "resolveClaimPosition",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "resolveLiquidation",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
    ],
    name: "updateClaimInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
    ],
    name: "updateLiquidationInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620016e4380380620016e4833981016040819052620000359162000189565b6001600160a01b03808416608052603c60005562015180600155821660a08190526040805163573ea57560e01b8152905184923092859263573ea575916004808201926020929091908290030181865afa15801562000098573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000be9190620001dd565b6001600160a01b0390811660e0528116620000ea575073c815db16d4be6ddf2685c201937905abf338f5d75b6040516337b6269f60e21b81526001600160a01b03838116600483015282169063ded89a7c906024016040805180830381865afa15801562000130573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000156919062000204565b506001600160a01b031660c0525062000247945050505050565b6001600160a01b03811681146200018657600080fd5b50565b6000806000606084860312156200019f57600080fd5b8351620001ac8162000170565b6020850151909350620001bf8162000170565b6040850151909250620001d28162000170565b809150509250925092565b600060208284031215620001f057600080fd5b8151620001fd8162000170565b9392505050565b600080604083850312156200021857600080fd5b8251620002258162000170565b602084015190925080151581146200023c57600080fd5b809150509250929050565b60805160a05160c05160e05161142e620002b660003960005050600061019a01526000818161010a015281816109ef01528181610d1701528181610e4e01528181610f03015261104201526000818161031d01528181610577015281816107580152610866015261142e6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637bd5d06311610097578063bcbaf48711610066578063bcbaf48714610274578063cec418ef14610287578063e9fcf1f61461029a578063edebcf86146102ad57600080fd5b80637bd5d063146101f95780638e2cdf681461020c57806396f823b41461021f5780639d920c391461023257600080fd5b806328f150eb116100d357806328f150eb146101955780633011e5d4146101bc578063369e9717146101dd578063373fa760146101e657600080fd5b8063049aacfe146101055780630b433a1214610156578063139f34cf1461016d578063206e8f3214610182575b600080fd5b61012c7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61015f60015481565b60405190815260200161014d565b61018061017b366004611066565b6102ef565b005b610180610190366004611066565b6103e1565b61012c7f000000000000000000000000000000000000000000000000000000000000000081565b6101cf6101ca3660046110a1565b610414565b60405161014d929190611131565b61015f60005481565b6101806101f4366004611066565b610549565b6101cf6102073660046110a1565b610657565b61018061021a366004611066565b61072a565b61018061022d366004611066565b610838565b61015f6102403660046110a1565b73ffffffffffffffffffffffffffffffffffffffff9091166000908152600360209081526040808320938352929052205490565b6101806102823660046110a1565b610927565b610180610295366004611066565b610944565b6101806102a83660046110a1565b610974565b61015f6102bb3660046110a1565b73ffffffffffffffffffffffffffffffffffffffff9091166000908152600260209081526040808320938352929052205490565b6040517f4a58e49e0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690634a58e49e90602401602060405180830381865afa158015610379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039d9190611154565b6103d3576040517f1353f3f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103de60038261098c565b50565b600181905560405181907f147643a3380a07b720e58d29bed784fd77f5778aaf06610663435736d29a776d90600090a250565b6040517fc4f865b20000000000000000000000000000000000000000000000000000000081526004810182905260009060609073ffffffffffffffffffffffffffffffffffffffff85169063c4f865b290602401602060405180830381865afa158015610485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a99190611154565b1561052e5760405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101849052600190309063e9fcf1f6906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505091509150610542565b505060408051602081019091526000808252905b9250929050565b6040517f4a58e49e0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690634a58e49e90602401602060405180830381865afa1580156105d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f79190611154565b61062d576040517f1353f3f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103de6003823073ffffffffffffffffffffffffffffffffffffffff16633011e5d4600154610a81565b6040517fb86f6aef0000000000000000000000000000000000000000000000000000000081526004810182905260009060609073ffffffffffffffffffffffffffffffffffffffff85169063b86f6aef90602401602060405180830381865afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190611154565b1561052e5760405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101849052600190309063bcbaf487906064016104e3565b6040517f4a58e49e0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690634a58e49e90602401602060405180830381865afa1580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d89190611154565b61080e576040517f1353f3f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103de6002823073ffffffffffffffffffffffffffffffffffffffff16637bd5d063600054610a81565b6040517f4a58e49e0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690634a58e49e90602401602060405180830381865afa1580156108c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e69190611154565b61091c576040517f1353f3f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103de60028261098c565b6000610931610e49565b50905061093f838383610ee3565b505050565b600081815560405182917fa60f93af5f46f4a9093acf49a5642d02b04c7d56297737df82bf0cf63f0fb6d991a250565b600061097e610e49565b50905061093f838383611022565b336000818152602084815260408083208584529091529020548015610a7b576040517fee8ca3b50000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063ee8ca3b590602401600060405180830381600087803b158015610a3357600080fd5b505af1158015610a47573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff8316600090815260208681526040808320878452909152812055505b50505050565b3360008181526020878152604080832088845290915290205415610aa55750610e42565b60408051600381830181815260c083019093526000928291606080840190803683370190505081526040805160038082526080820190925260209092019190816020015b6060815260200190600190039081610ae95750509052805180519192506000918290610b1757610b1761117d565b60200260200101906003811115610b3057610b306111ac565b90816003811115610b4357610b436111ac565b8152505060018160000151600181518110610b6057610b6061117d565b60200260200101906003811115610b7957610b796111ac565b90816003811115610b8c57610b8c6111ac565b8152505060028160000151600281518110610ba957610ba961117d565b60200260200101906003811115610bc257610bc26111ac565b90816003811115610bd557610bd56111ac565b9052506040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018990528251808303909101815260649091018252602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660e089901b1790529151610c4d92309291016111db565b6040516020818303038152906040528160200151600081518110610c7357610c7361117d565b6020908102919091010152610c88834261120a565b604080516fffffffffffffffffffffffffffffffff9283166020820152918516908201526060016040516020818303038152906040528160200151600181518110610cd557610cd561117d565b6020026020010181905250604051806020016040528060008152508160200151600281518110610d0757610d0761117d565b6020026020010181905250610d397f000000000000000000000000000000000000000000000000000000000000000090565b604080517fbcbaf48700000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff9290921691633323b467913091016040516020818303038152906040528473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6040518563ffffffff1660e01b8152600401610dca949392919061129f565b6020604051808303816000875af1158015610de9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0d9190611392565b73ffffffffffffffffffffffffffffffffffffffff909216600090815260208881526040808320898452909152902091909155505b5050505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b810c6366040518163ffffffff1660e01b81526004016040805180830381865afa158015610eb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eda91906113ab565b90939092509050565b8273ffffffffffffffffffffffffffffffffffffffff81166379bd1eac847f00000000000000000000000000000000000000000000000000000000000000005b73ffffffffffffffffffffffffffffffffffffffff1663573ea5756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9191906113db565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925273ffffffffffffffffffffffffffffffffffffffff16602482015260448101859052606401600060405180830381600087803b15801561100457600080fd5b505af1158015611018573d6000803e3d6000fd5b5050505050505050565b8273ffffffffffffffffffffffffffffffffffffffff811663de7c8cc2847f0000000000000000000000000000000000000000000000000000000000000000610f23565b60006020828403121561107857600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146103de57600080fd5b600080604083850312156110b457600080fd5b82356110bf8161107f565b946020939093013593505050565b6000815180845260005b818110156110f3576020818501810151868301820152016110d7565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b821515815260406020820152600061114c60408301846110cd565b949350505050565b60006020828403121561116657600080fd5b8151801515811461117657600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600061114c60408301846110cd565b80820180821115611244577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600081518084526020808501808196508360051b8101915082860160005b858110156112925782840389526112808483516110cd565b98850198935090840190600101611268565b5091979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff85168152600060206080818401526112cf60808401876110cd565b838103604080860191909152865181835280519183018290528301906000906060840190825b818110156113475784516004808210611334577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b50835293860193918601916001016112f5565b505084890151925083810385850152611360818461124a565b95505050505050611389606083018473ffffffffffffffffffffffffffffffffffffffff169052565b95945050505050565b6000602082840312156113a457600080fd5b5051919050565b600080604083850312156113be57600080fd5b8251915060208301516113d08161107f565b809150509250929050565b6000602082840312156113ed57600080fd5b81516111768161107f56fea26469706673582212202ebce8bead045d8987bed4b16593bf3ab0d1fb466352cbbc14000fd614119b9664736f6c63430008130033";

type ChromaticLiquidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChromaticLiquidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChromaticLiquidator__factory extends ContractFactory {
  constructor(...args: ChromaticLiquidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factory: AddressLike,
    _automate: AddressLike,
    opsProxyFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _factory,
      _automate,
      opsProxyFactory,
      overrides || {}
    );
  }
  override deploy(
    _factory: AddressLike,
    _automate: AddressLike,
    opsProxyFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _factory,
      _automate,
      opsProxyFactory,
      overrides || {}
    ) as Promise<
      ChromaticLiquidator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ChromaticLiquidator__factory {
    return super.connect(runner) as ChromaticLiquidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChromaticLiquidatorInterface {
    return new Interface(_abi) as ChromaticLiquidatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ChromaticLiquidator {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ChromaticLiquidator;
  }
}
