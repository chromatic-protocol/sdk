/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ChromaticRouter,
  ChromaticRouterInterface,
} from "../../../deployed/arbitrum_goerli/ChromaticRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotExistLpReceipt",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMarket",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AccountCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "int16",
        name: "feeRate",
        type: "int16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "enum LpAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tradingFeeRate",
            type: "int16",
          },
        ],
        internalType: "struct LpReceipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "int16[]",
        name: "feeRates",
        type: "int16[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "addLiquidityBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "enum LpAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tradingFeeRate",
            type: "int16",
          },
        ],
        internalType: "struct LpReceipt[]",
        name: "lpReceipts",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "addLiquidityCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "receiptId",
        type: "uint256",
      },
    ],
    name: "claimLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_receiptIds",
        type: "uint256[]",
      },
    ],
    name: "claimLiquidityBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receiptId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "claimLiquidityCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "claimPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLpReceiptIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "getLpReceiptIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "int224",
        name: "qty",
        type: "int224",
      },
      {
        internalType: "uint32",
        name: "leverage",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "takerMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "makerMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAllowableTradingFee",
        type: "uint256",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "openVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closeVersion",
            type: "uint256",
          },
          {
            internalType: "int224",
            name: "qty",
            type: "int224",
          },
          {
            internalType: "uint32",
            name: "leverage",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "openTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closeTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerMargin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "tradingFeeRate",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct BinMargin[]",
            name: "_binMargins",
            type: "tuple[]",
          },
          {
            internalType: "uint8",
            name: "_feeProtocol",
            type: "uint8",
          },
        ],
        internalType: "struct Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "int16",
        name: "feeRate",
        type: "int16",
      },
      {
        internalType: "uint256",
        name: "clbTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "enum LpAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tradingFeeRate",
            type: "int16",
          },
        ],
        internalType: "struct LpReceipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "int16[]",
        name: "feeRates",
        type: "int16[]",
      },
      {
        internalType: "uint256[]",
        name: "clbTokenAmounts",
        type: "uint256[]",
      },
    ],
    name: "removeLiquidityBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "enum LpAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tradingFeeRate",
            type: "int16",
          },
        ],
        internalType: "struct LpReceipt[]",
        name: "lpReceipts",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "clbToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "clbTokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "removeLiquidityCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "receiptId",
        type: "uint256",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_receiptIds",
        type: "uint256[]",
      },
    ],
    name: "withdrawLiquidityBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receiptId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawLiquidityCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200364338038062003643833981016040819052620000349162000193565b80604051620000439062000185565b604051809103906000f08015801562000060573d6000803e3d6000fd5b50600080546001600160a01b039283166001600160a01b03199182161790915560018054939092169216919091179055620000a26200009c3390565b620000d2565b620000ac62000124565b600380546001600160a01b0319166001600160a01b0392909216919091179055620001c5565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6004546001600160a01b03163314620001835760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b6113c8806200227b83390190565b600060208284031215620001a657600080fd5b81516001600160a01b0381168114620001be57600080fd5b9392505050565b6120a680620001d56000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063742fe1f8116100b85780639dca362f1161007c5780639dca362f146102bd578063db613e81146102c5578063de4b035c146102e3578063e9fcf1f6146102f6578063f2fde38b14610309578063f817b626146101d857600080fd5b8063742fe1f81461023f5780638290ea0e14610252578063839d2e60146102725780638da5cb5b14610285578063970d1d6f146102aa57600080fd5b80633b23ff671161010a5780633b23ff67146101d8578063439de419146101eb5780635a80e080146101fe5780635cb2b6a714610211578063715018a614610224578063728ca6b01461022c57600080fd5b8063067681e81461014757806306d47de91461017057806307187eb2146101855780630ec05d35146101a55780632f913d79146101c5575b600080fd5b61015a610155366004611516565b61031c565b604051610167919061154f565b60405180910390f35b61018361017e366004611593565b610356565b005b6101986101933660046115ce565b61043d565b6040516101679190611698565b6101b86101b33660046116c7565b6104f4565b6040516101679190611776565b6101836101d336600461187b565b610617565b6101836101e6366004611910565b610656565b6101836101f9366004611593565b610725565b61018361020c36600461194e565b6107b1565b61015a61021f3660046119a9565b6108c8565b6101836108d4565b61019861023a3660046115ce565b6108e8565b61018361024d366004611593565b61092e565b6102656102603660046119c6565b6109a0565b6040516101679190611a5a565b6102656102803660046119c6565b610ada565b6004546001600160a01b03165b6040516001600160a01b039091168152602001610167565b6101836102b8366004611a9c565b610c04565b610183610cb1565b336000908152600260205260409020546001600160a01b0316610292565b6101836102f136600461187b565b610db2565b610183610304366004611593565b610df1565b6101836103173660046119a9565b610e31565b6001600160a01b03808316600090815260056020908152604080832093851683529290522060609061034d90610eaa565b90505b92915050565b6001600160a01b03821660009081526005602090815260408083203380855292529091206103849083610ebe565b6103a157604051630188f66960e71b815260040160405180910390fd5b610437836311753f7660e01b846040518060200160405280866001600160a01b03168152506040516020016103e291516001600160a01b0316815260200190565b60408051601f19818403018152908290526104009291602401611b38565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ed6565b50505050565b6104456114b1565b60006104a28663b21837e060e01b85886040518060400160405280336001600160a01b031681526020018a8152506040516020016104839190611b51565b60408051601f1981840301815290829052610400939291602401611b71565b9050808060200190518101906104b89190611c40565b80516001600160a01b038816600090815260056020908152604080832033845290915290209193506104ea9190610f4f565b5050949350505050565b6105666040518061016001604052806000815260200160008152602001600081526020016000601b0b8152602001600063ffffffff16815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600060ff1681525090565b61056f33610f5b565b604051630ec05d3560e01b81526001600160a01b038981166004830152601b89900b602483015263ffffffff88166044830152606482018790526084820186905260a482018590529190911690630ec05d359060c4016000604051808303816000875af11580156105e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261060c9190810190611da5565b979650505050505050565b60005b81811015610437576106448484848481811061063857610638611e9a565b90506020020135610356565b8061064e81611ec6565b91505061061a565b60035460405163252c724f60e11b81523360048201526001600160a01b0390911690634a58e49e90602401602060405180830381865afa15801561069e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c29190611edf565b6106df5760405163c4bbea6960e01b815260040160405180910390fd5b60006106ed82840184611f4e565b33600090815260056020908152604080832084516001600160a01b03168452909152902090915061071e9085610f7d565b5050505050565b6001600160a01b03821660009081526005602090815260408083203380855292529091206107539083610ebe565b61077057604051630188f66960e71b815260040160405180910390fd5b6104378363abfefb9060e01b846040518060200160405280866001600160a01b03168152506040516020016103e291516001600160a01b0316815260200190565b60035460405163252c724f60e11b81523360048201526001600160a01b0390911690634a58e49e90602401602060405180830381865afa1580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d9190611edf565b61083a5760405163c4bbea6960e01b815260040160405180910390fd5b600061084882840184611fa5565b80516020808301516040805192830181526000835251637921219560e11b81529394506001600160a01b0389169363f242432a9361088f93909233928b9290600401611fc1565b600060405180830381600087803b1580156108a957600080fd5b505af11580156108bd573d6000803e3d6000fd5b505050505050505050565b6060610350823361031c565b6108dc610f89565b6108e66000610fe3565b565b6108f06114b1565b60006104a286638c4bdb3f60e01b85886040518060400160405280336001600160a01b031681526020018a8152506040516020016104839190611b51565b61093733610f5b565b604051630e85fc3f60e31b81526001600160a01b03848116600483015260248201849052919091169063742fe1f8906044015b600060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505050505050565b60608382146109f65760405162461bcd60e51b815260206004820152601e60248201527f5472616465526f757465723a20696e76616c696420617267756d656e7473000060448201526064015b60405180910390fd5b836001600160401b03811115610a0e57610a0e611ba4565b604051908082528060200260200182016040528015610a4757816020015b610a346114b1565b815260200190600190039081610a2c5790505b50905060005b84811015610acf57610a9f88878784818110610a6b57610a6b611e9a565b9050602002016020810190610a809190611ffb565b868685818110610a9257610a92611e9a565b905060200201358a61043d565b828281518110610ab157610ab1611e9a565b60200260200101819052508080610ac790611ec6565b915050610a4d565b509695505050505050565b6060838214610b2b5760405162461bcd60e51b815260206004820152601e60248201527f5472616465526f757465723a20696e76616c696420617267756d656e7473000060448201526064016109ed565b836001600160401b03811115610b4357610b43611ba4565b604051908082528060200260200182016040528015610b7c57816020015b610b696114b1565b815260200190600190039081610b615790505b50905060005b84811015610acf57610bd488878784818110610ba057610ba0611e9a565b9050602002016020810190610bb59190611ffb565b868685818110610bc757610bc7611e9a565b905060200201358a6108e8565b828281518110610be657610be6611e9a565b60200260200101819052508080610bfc90611ec6565b915050610b82565b60035460405163252c724f60e11b81523360048201526001600160a01b0390911690634a58e49e90602401602060405180830381865afa158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c709190611edf565b610c8d5760405163c4bbea6960e01b815260040160405180910390fd5b6000610c9b82840184611fa5565b905061071e858260000151868460200151611035565b336000818152600260205260409020546001600160a01b031615610cd457600080fd5b60008054610cea906001600160a01b031661108f565b60015460405163c0c53b8b60e01b81526001600160a01b038581166004830152306024830152918216604482015291925082169063c0c53b8b90606401600060405180830381600087803b158015610d4157600080fd5b505af1158015610d55573d6000803e3d6000fd5b5050506001600160a01b0380841660008181526002602052604080822080549487166001600160a01b031990951685179055519193507fac631f3001b55ea1509cf3d7e74898f85392a61a76e8149181ae1259622dabc891a35050565b60005b8181101561043757610ddf84848484818110610dd357610dd3611e9a565b90506020020135610725565b80610de981611ec6565b915050610db5565b610dfa33610f5b565b6040516374fe78fb60e11b81526001600160a01b03848116600483015260248201849052919091169063e9fcf1f69060440161096a565b610e39610f89565b6001600160a01b038116610e9e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109ed565b610ea781610fe3565b50565b60606000610eb783611129565b9392505050565b6000818152600183016020526040812054151561034d565b6060600080846001600160a01b031684604051610ef39190612018565b6000604051808303816000865af19150503d8060008114610f30576040519150601f19603f3d011682016040523d82523d6000602084013e610f35565b606091505b509150915081610f4757805160208201fd5b949350505050565b600061034d8383611185565b6001600160a01b03808216600090815260026020526040812054909116610350565b600061034d83836111d4565b6004546001600160a01b031633146108e65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109ed565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526104379085906112c7565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b0381166111245760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b60448201526064016109ed565b919050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561117957602002820191906000526020600020905b815481526020019060010190808311611165575b50505050509050919050565b60008181526001830160205260408120546111cc57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610350565b506000610350565b600081815260018301602052604081205480156112bd5760006111f8600183612034565b855490915060009061120c90600190612034565b905081811461127157600086600001828154811061122c5761122c611e9a565b906000526020600020015490508087600001848154811061124f5761124f611e9a565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061128257611282612047565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610350565b6000915050610350565b600061131c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661139e9092919063ffffffff16565b805190915015611399578080602001905181019061133a9190611edf565b6113995760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109ed565b505050565b6060610f47848460008585600080866001600160a01b031685876040516113c59190612018565b60006040518083038185875af1925050503d8060008114611402576040519150601f19603f3d011682016040523d82523d6000602084013e611407565b606091505b509150915061060c878383876060831561148257825160000361147b576001600160a01b0385163b61147b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109ed565b5081610f47565b610f4783838151156114975781518083602001fd5b8060405162461bcd60e51b81526004016109ed919061205d565b6040518060c0016040528060008152602001600081526020016000815260200160006001600160a01b03168152602001600060018111156114f4576114f4611621565b8152600060209091015290565b6001600160a01b0381168114610ea757600080fd5b6000806040838503121561152957600080fd5b823561153481611501565b9150602083013561154481611501565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156115875783518352928401929184019160010161156b565b50909695505050505050565b600080604083850312156115a657600080fd5b82356115b181611501565b946020939093013593505050565b8060010b8114610ea757600080fd5b600080600080608085870312156115e457600080fd5b84356115ef81611501565b935060208501356115ff816115bf565b925060408501359150606085013561161681611501565b939692955090935050565b634e487b7160e01b600052602160045260246000fd5b8051825260208082015190830152604080820151908301526060808201516001600160a01b03169083015260808101516002811061168557634e487b7160e01b600052602160045260246000fd5b608083015260a09081015160010b910152565b60c081016103508284611637565b80601b0b8114610ea757600080fd5b63ffffffff81168114610ea757600080fd5b60008060008060008060c087890312156116e057600080fd5b86356116eb81611501565b955060208701356116fb816116a6565b9450604087013561170b816116b5565b959894975094956060810135955060808101359460a0909101359350915050565b600081518084526020808501945080840160005b8381101561176b578151805161ffff1688528301518388015260409096019590820190600101611740565b509495945050505050565b60208152815160208201526020820151604082015260408201516060820152600060608301516117ab6080840182601b0b9052565b50608083015163ffffffff811660a08401525060a083015160c083015260c083015160e083015260e08301516101008181850152808501519150506101206117fd818501836001600160a01b03169052565b80850151915050610160610140818186015261181d61018086018461172c565b95015160ff169301929092525090919050565b60008083601f84011261184257600080fd5b5081356001600160401b0381111561185957600080fd5b6020830191508360208260051b850101111561187457600080fd5b9250929050565b60008060006040848603121561189057600080fd5b833561189b81611501565b925060208401356001600160401b038111156118b657600080fd5b6118c286828701611830565b9497909650939450505050565b60008083601f8401126118e157600080fd5b5081356001600160401b038111156118f857600080fd5b60208301915083602082850101111561187457600080fd5b60008060006040848603121561192557600080fd5b8335925060208401356001600160401b0381111561194257600080fd5b6118c2868287016118cf565b6000806000806060858703121561196457600080fd5b843561196f81611501565b93506020850135925060408501356001600160401b0381111561199157600080fd5b61199d878288016118cf565b95989497509550505050565b6000602082840312156119bb57600080fd5b8135610eb781611501565b600080600080600080608087890312156119df57600080fd5b86356119ea81611501565b955060208701356119fa81611501565b945060408701356001600160401b0380821115611a1657600080fd5b611a228a838b01611830565b90965094506060890135915080821115611a3b57600080fd5b50611a4889828a01611830565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b8181101561158757611a89838551611637565b9284019260c09290920191600101611a76565b60008060008060608587031215611ab257600080fd5b8435611abd81611501565b93506020850135611acd81611501565b925060408501356001600160401b0381111561199157600080fd5b60005b83811015611b03578181015183820152602001611aeb565b50506000910152565b60008151808452611b24816020860160208601611ae8565b601f01601f19169290920160200192915050565b828152604060208201526000610f476040830184611b0c565b81516001600160a01b031681526020808301519082015260408101610350565b60018060a01b03841681528260010b6020820152606060408201526000611b9b6060830184611b0c565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611bdc57611bdc611ba4565b60405290565b60405161016081016001600160401b0381118282101715611bdc57611bdc611ba4565b604051601f8201601f191681016001600160401b0381118282101715611c2d57611c2d611ba4565b604052919050565b805161112481611501565b600060c08284031215611c5257600080fd5b60405160c081018181106001600160401b0382111715611c7457611c74611ba4565b80604052508251815260208301516020820152604083015160408201526060830151611c9f81611501565b6060820152608083015160028110611cb657600080fd5b608082015260a0830151611cc9816115bf565b60a08201529392505050565b8051611124816116a6565b8051611124816116b5565b600082601f830112611cfc57600080fd5b815160206001600160401b03821115611d1757611d17611ba4565b611d25818360051b01611c05565b82815260069290921b84018101918181019086841115611d4457600080fd5b8286015b84811015610acf5760408189031215611d615760008081fd5b611d69611bba565b815161ffff81168114611d7c5760008081fd5b81528185015185820152835291830191604001611d48565b805160ff8116811461112457600080fd5b600060208284031215611db757600080fd5b81516001600160401b0380821115611dce57600080fd5b908301906101608286031215611de357600080fd5b611deb611be2565b825181526020830151602082015260408301516040820152611e0f60608401611cd5565b6060820152611e2060808401611ce0565b608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100611e51818501611c35565b908201526101208381015183811115611e6957600080fd5b611e7588828701611ceb565b8284015250506101409150611e8b828401611d94565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611ed857611ed8611eb0565b5060010190565b600060208284031215611ef157600080fd5b81518015158114610eb757600080fd5b600060208284031215611f1357600080fd5b604051602081018181106001600160401b0382111715611f3557611f35611ba4565b6040529050808235611f4681611501565b905292915050565b600060208284031215611f6057600080fd5b61034d8383611f01565b600060408284031215611f7c57600080fd5b611f84611bba565b90508135611f9181611501565b808252506020820135602082015292915050565b600060408284031215611fb757600080fd5b61034d8383611f6a565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061060c90830184611b0c565b60006020828403121561200d57600080fd5b8135610eb7816115bf565b6000825161202a818460208701611ae8565b9190910192915050565b8181038181111561035057610350611eb0565b634e487b7160e01b600052603160045260246000fd5b60208152600061034d6020830184611b0c56fea2646970667358221220579211265e7fa515a717a64f2f25f22f70ace9602cf7da234a26b9eb64d55d3f64736f6c63430008130033608060405234801561001057600080fd5b506113a8806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063e19e633211610066578063e19e633214610127578063e3d670d71461013a578063e6b67d461461015b578063e9fcf1f61461017e578063f3fef3a31461019157600080fd5b80630ec05d35146100a357806328fe7031146100cc5780633eabb143146100ec578063742fe1f814610101578063c0c53b8b14610114575b600080fd5b6100b66100b1366004610c33565b6101a4565b6040516100c39190610ce2565b60405180910390f35b6100df6100da366004610d9c565b6102e3565b6040516100c39190610db9565b6100ff6100fa366004610e46565b61030d565b005b6100ff61010f366004610e92565b6103a5565b6100ff610122366004610ebe565b610456565b6100ff610135366004610f09565b6104cc565b61014d610148366004610d9c565b610590565b6040519081526020016100c3565b61016e610169366004610e92565b6105fb565b60405190151581526020016100c3565b6100ff61018c366004610e92565b610624565b6100ff61019f366004610e92565b6106b2565b6102166040518061016001604052806000815260200160008152602001600081526020016000601b0b8152602001600063ffffffff16815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600060ff1681525090565b6002546001600160a01b0316331461024157604051639165520160e01b815260040160405180910390fd5b604080516020810182526000815290516364ce547960e11b81526001600160a01b0389169163c99ca8f291610282918a918a918a918a918a91600401610fcc565b6000604051808303816000875af11580156102a1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c99190810190611192565b90506102d9878260000151610722565b9695505050505050565b6001600160a01b038116600090815260036020526040902060609061030790610744565b92915050565b60005460405163252c724f60e11b81523360048201526001600160a01b0390911690634a58e49e90602401602060405180830381865afa158015610355573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103799190611288565b6103965760405163c4bbea6960e01b815260040160405180910390fd5b6103a03384610751565b505050565b6002546001600160a01b031633146103d057604051639165520160e01b815260040160405180910390fd5b6103da82826105fb565b6103f757604051632b48580b60e11b815260040160405180910390fd5b60405163a126d60160e01b8152600481018290526001600160a01b0383169063a126d601906024015b600060405180830381600087803b15801561043a57600080fd5b505af115801561044e573d6000803e3d6000fd5b505050505050565b600254600160a01b900460ff16156104805760405162dc149f60e41b815260040160405180910390fd5b600180546001600160a01b039485166001600160a01b031991821617909155600280546001600160a81b03191693851693909317600160a01b1790925560008054919093169116179055565b60005460405163252c724f60e11b81523360048201526001600160a01b0390911690634a58e49e90602401602060405180830381865afa158015610514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105389190611288565b6105555760405163c4bbea6960e01b815260040160405180910390fd5b8261055f86610590565b101561057e5760405163569d45cf60e11b815260040160405180910390fd5b610589858585610773565b5050505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156105d7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030791906112aa565b6001600160a01b038216600090815260036020526040812061061d90836107c5565b9392505050565b6002546001600160a01b0316331461064f57604051639165520160e01b815260040160405180910390fd5b61065982826105fb565b61067657604051632b48580b60e11b815260040160405180910390fd5b6040805160208101825260008152905163d22c7a4560e01b81526001600160a01b0384169163d22c7a45916104209185913091906004016112c3565b6001546001600160a01b031633146106dd576040516330cd747160e01b815260040160405180910390fd5b806106e783610590565b10156107065760405163569d45cf60e11b815260040160405180910390fd5b60015461071e9083906001600160a01b031683610773565b5050565b6001600160a01b03821660009081526003602052604090206103a090826107dd565b6060600061061d836107e9565b6001600160a01b03821660009081526003602052604090206103a09082610845565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103a0908490610851565b6000818152600183016020526040812054151561061d565b600061061d8383610928565b60608160000180548060200260200160405190810160405280929190818152602001828054801561083957602002820191906000526020600020905b815481526020019060010190808311610825575b50505050509050919050565b600061061d8383610977565b60006108a6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a6a9092919063ffffffff16565b8051909150156103a057808060200190518101906108c49190611288565b6103a05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b600081815260018301602052604081205461096f57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610307565b506000610307565b60008181526001830160205260408120548015610a6057600061099b6001836112f6565b85549091506000906109af906001906112f6565b9050818114610a145760008660000182815481106109cf576109cf611317565b90600052602060002001549050808760000184815481106109f2576109f2611317565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610a2557610a2561132d565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610307565b6000915050610307565b6060610a798484600085610a81565b949350505050565b606082471015610ae25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161091f565b600080866001600160a01b03168587604051610afe9190611343565b60006040518083038185875af1925050503d8060008114610b3b576040519150601f19603f3d011682016040523d82523d6000602084013e610b40565b606091505b5091509150610b5187838387610b5c565b979650505050505050565b60608315610bcb578251600003610bc4576001600160a01b0385163b610bc45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161091f565b5081610a79565b610a798383815115610be05781518083602001fd5b8060405162461bcd60e51b815260040161091f919061135f565b6001600160a01b0381168114610c0f57600080fd5b50565b80601b0b8114610c0f57600080fd5b63ffffffff81168114610c0f57600080fd5b60008060008060008060c08789031215610c4c57600080fd5b8635610c5781610bfa565b95506020870135610c6781610c12565b94506040870135610c7781610c21565b959894975094956060810135955060808101359460a0909101359350915050565b600081518084526020808501945080840160005b83811015610cd7578151805161ffff1688528301518388015260409096019590820190600101610cac565b509495945050505050565b6020815281516020820152602082015160408201526040820151606082015260006060830151610d176080840182601b0b9052565b50608083015163ffffffff811660a08401525060a083015160c083015260c083015160e083015260e0830151610100818185015280850151915050610120610d69818501836001600160a01b03169052565b808501519150506101606101408181860152610d89610180860184610c98565b95015160ff169301929092525090919050565b600060208284031215610dae57600080fd5b813561061d81610bfa565b6020808252825182820181905260009190848201906040850190845b81811015610df157835183529284019291840191600101610dd5565b50909695505050505050565b60008083601f840112610e0f57600080fd5b50813567ffffffffffffffff811115610e2757600080fd5b602083019150836020828501011115610e3f57600080fd5b9250929050565b600080600060408486031215610e5b57600080fd5b83359250602084013567ffffffffffffffff811115610e7957600080fd5b610e8586828701610dfd565b9497909650939450505050565b60008060408385031215610ea557600080fd5b8235610eb081610bfa565b946020939093013593505050565b600080600060608486031215610ed357600080fd5b8335610ede81610bfa565b92506020840135610eee81610bfa565b91506040840135610efe81610bfa565b809150509250925092565b600080600080600060808688031215610f2157600080fd5b8535610f2c81610bfa565b94506020860135610f3c81610bfa565b935060408601359250606086013567ffffffffffffffff811115610f5f57600080fd5b610f6b88828901610dfd565b969995985093965092949392505050565b60005b83811015610f97578181015183820152602001610f7f565b50506000910152565b60008151808452610fb8816020860160208601610f7c565b601f01601f19169290920160200192915050565b86601b0b815263ffffffff8616602082015284604082015283606082015282608082015260c060a0820152600061100660c0830184610fa0565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561104b5761104b611012565b60405290565b604051610160810167ffffffffffffffff8111828210171561104b5761104b611012565b604051601f8201601f1916810167ffffffffffffffff8111828210171561109e5761109e611012565b604052919050565b80516110b181610c12565b919050565b80516110b181610c21565b80516110b181610bfa565b600082601f8301126110dd57600080fd5b8151602067ffffffffffffffff8211156110f9576110f9611012565b611107818360051b01611075565b82815260069290921b8401810191818101908684111561112657600080fd5b8286015b8481101561117657604081890312156111435760008081fd5b61114b611028565b815161ffff8116811461115e5760008081fd5b8152818501518582015283529183019160400161112a565b509695505050505050565b805160ff811681146110b157600080fd5b6000602082840312156111a457600080fd5b815167ffffffffffffffff808211156111bc57600080fd5b9083019061016082860312156111d157600080fd5b6111d9611051565b8251815260208301516020820152604083015160408201526111fd606084016110a6565b606082015261120e608084016110b6565b608082015260a083015160a082015260c083015160c082015260e083015160e082015261010061123f8185016110c1565b90820152610120838101518381111561125757600080fd5b611263888287016110cc565b8284015250506101409150611279828401611181565b91810191909152949350505050565b60006020828403121561129a57600080fd5b8151801515811461061d57600080fd5b6000602082840312156112bc57600080fd5b5051919050565b8381526001600160a01b03831660208201526060604082018190526000906112ed90830184610fa0565b95945050505050565b8181038181111561030757634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60008251611355818460208701610f7c565b9190910192915050565b60208152600061061d6020830184610fa056fea26469706673582212205acc2644f65c17b59ca181f8b079d416729e52e8d2145aeb8fe8a38fbcf0b16364736f6c63430008130033";

type ChromaticRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChromaticRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChromaticRouter__factory extends ContractFactory {
  constructor(...args: ChromaticRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _marketFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChromaticRouter> {
    return super.deploy(
      _marketFactory,
      overrides || {}
    ) as Promise<ChromaticRouter>;
  }
  override getDeployTransaction(
    _marketFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_marketFactory, overrides || {});
  }
  override attach(address: string): ChromaticRouter {
    return super.attach(address) as ChromaticRouter;
  }
  override connect(signer: Signer): ChromaticRouter__factory {
    return super.connect(signer) as ChromaticRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChromaticRouterInterface {
    return new utils.Interface(_abi) as ChromaticRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChromaticRouter {
    return new Contract(address, _abi, signerOrProvider) as ChromaticRouter;
  }
}
