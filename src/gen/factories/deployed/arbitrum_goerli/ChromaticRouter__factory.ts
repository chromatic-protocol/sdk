/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ChromaticRouter,
  ChromaticRouterInterface,
} from "../../../deployed/arbitrum_goerli/ChromaticRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotExistLpReceipt",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMarket",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AccountCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "int16",
        name: "feeRate",
        type: "int16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "enum LpAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tradingFeeRate",
            type: "int16",
          },
        ],
        internalType: "struct LpReceipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "int16[]",
        name: "feeRates",
        type: "int16[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "addLiquidityBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "enum LpAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tradingFeeRate",
            type: "int16",
          },
        ],
        internalType: "struct LpReceipt[]",
        name: "lpReceipts",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "settlementToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "addLiquidityCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "receiptId",
        type: "uint256",
      },
    ],
    name: "claimLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_receiptIds",
        type: "uint256[]",
      },
    ],
    name: "claimLiquidityBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receiptId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "claimLiquidityCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "claimPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLpReceiptIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "getLpReceiptIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "int224",
        name: "qty",
        type: "int224",
      },
      {
        internalType: "uint32",
        name: "leverage",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "takerMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "makerMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAllowableTradingFee",
        type: "uint256",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "openVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closeVersion",
            type: "uint256",
          },
          {
            internalType: "int224",
            name: "qty",
            type: "int224",
          },
          {
            internalType: "uint32",
            name: "leverage",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "openTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closeTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerMargin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "tradingFeeRate",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct BinMargin[]",
            name: "_binMargins",
            type: "tuple[]",
          },
          {
            internalType: "uint8",
            name: "_feeProtocol",
            type: "uint8",
          },
        ],
        internalType: "struct Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "int16",
        name: "feeRate",
        type: "int16",
      },
      {
        internalType: "uint256",
        name: "clbTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "enum LpAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tradingFeeRate",
            type: "int16",
          },
        ],
        internalType: "struct LpReceipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "int16[]",
        name: "feeRates",
        type: "int16[]",
      },
      {
        internalType: "uint256[]",
        name: "clbTokenAmounts",
        type: "uint256[]",
      },
    ],
    name: "removeLiquidityBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "enum LpAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tradingFeeRate",
            type: "int16",
          },
        ],
        internalType: "struct LpReceipt[]",
        name: "lpReceipts",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "clbToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "clbTokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "removeLiquidityCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "receiptId",
        type: "uint256",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_receiptIds",
        type: "uint256[]",
      },
    ],
    name: "withdrawLiquidityBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receiptId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawLiquidityCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200365138038062003651833981016040819052620000349162000193565b80604051620000439062000185565b604051809103906000f08015801562000060573d6000803e3d6000fd5b50600080546001600160a01b039283166001600160a01b03199182161790915560018054939092169216919091179055620000a26200009c3390565b620000d2565b620000ac62000124565b600380546001600160a01b0319166001600160a01b0392909216919091179055620001c5565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6004546001600160a01b03163314620001835760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b6113e3806200226e83390190565b600060208284031215620001a657600080fd5b81516001600160a01b0381168114620001be57600080fd5b9392505050565b61209980620001d56000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063742fe1f8116100b85780639dca362f1161007c5780639dca362f146102b2578063db613e81146102ba578063de4b035c146102d8578063e9fcf1f6146102eb578063f2fde38b146102fe578063f817b626146101d857600080fd5b8063742fe1f81461023f5780638290ea0e14610252578063839d2e60146102725780638da5cb5b14610285578063970d1d6f1461029f57600080fd5b80633b23ff671161010a5780633b23ff67146101d8578063439de419146101eb5780635a80e080146101fe5780635cb2b6a714610211578063715018a614610224578063728ca6b01461022c57600080fd5b8063067681e81461014757806306d47de91461017057806307187eb2146101855780630ec05d35146101a55780632f913d79146101c5575b600080fd5b61015a6101553660046114be565b610311565b60405161016791906114f7565b60405180910390f35b61018361017e36600461153b565b61034b565b005b610198610193366004611576565b610432565b6040516101679190611640565b6101b86101b336600461166f565b6104e9565b604051610167919061171e565b6101836101d3366004611823565b61060c565b6101836101e63660046118b8565b61064b565b6101836101f936600461153b565b61071f565b61018361020c3660046118f6565b6107ab565b61015a61021f366004611951565b6108c7565b6101836108d3565b61019861023a366004611576565b6108e7565b61018361024d36600461153b565b61092d565b61026561026036600461196e565b61099f565b6040516101679190611a02565b61026561028036600461196e565b610aad565b6004546001600160a01b03165b6040516101679190611a44565b6101836102ad366004611a58565b610ba7565b610183610c59565b336000908152600260205260409020546001600160a01b0316610292565b6101836102e6366004611823565b610d5a565b6101836102f936600461153b565b610d99565b61018361030c366004611951565b610dd9565b6001600160a01b03808316600090815260056020908152604080832093851683529290522060609061034290610e52565b90505b92915050565b6001600160a01b03821660009081526005602090815260408083203380855292529091206103799083610e66565b61039657604051630188f66960e71b815260040160405180910390fd5b61042c836311753f7660e01b846040518060200160405280866001600160a01b03168152506040516020016103d791516001600160a01b0316815260200190565b60408051601f19818403018152908290526103f59291602401611af4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e7e565b50505050565b61043a611459565b60006104978663b21837e060e01b85886040518060400160405280336001600160a01b031681526020018a8152506040516020016104789190611b0d565b60408051601f19818403018152908290526103f5939291602401611b2d565b9050808060200190518101906104ad9190611bfc565b80516001600160a01b038816600090815260056020908152604080832033845290915290209193506104df9190610ef7565b5050949350505050565b61055b6040518061016001604052806000815260200160008152602001600081526020016000601b0b8152602001600063ffffffff16815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600060ff1681525090565b61056433610f03565b604051630ec05d3560e01b81526001600160a01b038981166004830152601b89900b602483015263ffffffff88166044830152606482018790526084820186905260a482018590529190911690630ec05d359060c4016000604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106019190810190611d61565b979650505050505050565b60005b8181101561042c576106398484848481811061062d5761062d611e56565b9050602002013561034b565b8061064381611e82565b91505061060f565b60035460405163252c724f60e11b81526001600160a01b0390911690634a58e49e9061067b903390600401611a44565b602060405180830381865afa158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc9190611e9b565b6106d95760405163c4bbea6960e01b815260040160405180910390fd5b60006106e782840184611f0a565b33600090815260056020908152604080832084516001600160a01b0316845290915290209091506107189085610f25565b5050505050565b6001600160a01b038216600090815260056020908152604080832033808552925290912061074d9083610e66565b61076a57604051630188f66960e71b815260040160405180910390fd5b61042c8363abfefb9060e01b846040518060200160405280866001600160a01b03168152506040516020016103d791516001600160a01b0316815260200190565b60035460405163252c724f60e11b81526001600160a01b0390911690634a58e49e906107db903390600401611a44565b602060405180830381865afa1580156107f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081c9190611e9b565b6108395760405163c4bbea6960e01b815260040160405180910390fd5b600061084782840184611f61565b80516020808301516040805192830181526000835251637921219560e11b81529394506001600160a01b0389169363f242432a9361088e93909233928b9290600401611f7d565b600060405180830381600087803b1580156108a857600080fd5b505af11580156108bc573d6000803e3d6000fd5b505050505050505050565b60606103458233610311565b6108db610f31565b6108e56000610f8b565b565b6108ef611459565b600061049786638c4bdb3f60e01b85886040518060400160405280336001600160a01b031681526020018a8152506040516020016104789190611b0d565b61093633610f03565b604051630e85fc3f60e31b81526001600160a01b03848116600483015260248201849052919091169063742fe1f8906044015b600060405180830381600087803b15801561098357600080fd5b505af1158015610997573d6000803e3d6000fd5b505050505050565b60608382146109c95760405162461bcd60e51b81526004016109c090611fb7565b60405180910390fd5b836001600160401b038111156109e1576109e1611b60565b604051908082528060200260200182016040528015610a1a57816020015b610a07611459565b8152602001906001900390816109ff5790505b50905060005b84811015610aa257610a7288878784818110610a3e57610a3e611e56565b9050602002016020810190610a539190611fee565b868685818110610a6557610a65611e56565b905060200201358a610432565b828281518110610a8457610a84611e56565b60200260200101819052508080610a9a90611e82565b915050610a20565b509695505050505050565b6060838214610ace5760405162461bcd60e51b81526004016109c090611fb7565b836001600160401b03811115610ae657610ae6611b60565b604051908082528060200260200182016040528015610b1f57816020015b610b0c611459565b815260200190600190039081610b045790505b50905060005b84811015610aa257610b7788878784818110610b4357610b43611e56565b9050602002016020810190610b589190611fee565b868685818110610b6a57610b6a611e56565b905060200201358a6108e7565b828281518110610b8957610b89611e56565b60200260200101819052508080610b9f90611e82565b915050610b25565b60035460405163252c724f60e11b81526001600160a01b0390911690634a58e49e90610bd7903390600401611a44565b602060405180830381865afa158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c189190611e9b565b610c355760405163c4bbea6960e01b815260040160405180910390fd5b6000610c4382840184611f61565b9050610718858260000151868460200151610fdd565b336000818152600260205260409020546001600160a01b031615610c7c57600080fd5b60008054610c92906001600160a01b0316611037565b60015460405163c0c53b8b60e01b81526001600160a01b038581166004830152306024830152918216604482015291925082169063c0c53b8b90606401600060405180830381600087803b158015610ce957600080fd5b505af1158015610cfd573d6000803e3d6000fd5b5050506001600160a01b0380841660008181526002602052604080822080549487166001600160a01b031990951685179055519193507fac631f3001b55ea1509cf3d7e74898f85392a61a76e8149181ae1259622dabc891a35050565b60005b8181101561042c57610d8784848484818110610d7b57610d7b611e56565b9050602002013561071f565b80610d9181611e82565b915050610d5d565b610da233610f03565b6040516374fe78fb60e11b81526001600160a01b03848116600483015260248201849052919091169063e9fcf1f690604401610969565b610de1610f31565b6001600160a01b038116610e465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109c0565b610e4f81610f8b565b50565b60606000610e5f836110d1565b9392505050565b60008181526001830160205260408120541515610342565b6060600080846001600160a01b031684604051610e9b919061200b565b6000604051808303816000865af19150503d8060008114610ed8576040519150601f19603f3d011682016040523d82523d6000602084013e610edd565b606091505b509150915081610eef57805160208201fd5b949350505050565b6000610342838361112d565b6001600160a01b03808216600090815260026020526040812054909116610345565b6000610342838361117c565b6004546001600160a01b031633146108e55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109c0565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261042c90859061126f565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b0381166110cc5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b60448201526064016109c0565b919050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561112157602002820191906000526020600020905b81548152602001906001019080831161110d575b50505050509050919050565b600081815260018301602052604081205461117457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610345565b506000610345565b600081815260018301602052604081205480156112655760006111a0600183612027565b85549091506000906111b490600190612027565b90508181146112195760008660000182815481106111d4576111d4611e56565b90600052602060002001549050808760000184815481106111f7576111f7611e56565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061122a5761122a61203a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610345565b6000915050610345565b60006112c4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113469092919063ffffffff16565b80519091501561134157808060200190518101906112e29190611e9b565b6113415760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109c0565b505050565b6060610eef848460008585600080866001600160a01b0316858760405161136d919061200b565b60006040518083038185875af1925050503d80600081146113aa576040519150601f19603f3d011682016040523d82523d6000602084013e6113af565b606091505b5091509150610601878383876060831561142a578251600003611423576001600160a01b0385163b6114235760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109c0565b5081610eef565b610eef838381511561143f5781518083602001fd5b8060405162461bcd60e51b81526004016109c09190612050565b6040518060c0016040528060008152602001600081526020016000815260200160006001600160a01b031681526020016000600181111561149c5761149c6115c9565b8152600060209091015290565b6001600160a01b0381168114610e4f57600080fd5b600080604083850312156114d157600080fd5b82356114dc816114a9565b915060208301356114ec816114a9565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561152f57835183529284019291840191600101611513565b50909695505050505050565b6000806040838503121561154e57600080fd5b8235611559816114a9565b946020939093013593505050565b8060010b8114610e4f57600080fd5b6000806000806080858703121561158c57600080fd5b8435611597816114a9565b935060208501356115a781611567565b92506040850135915060608501356115be816114a9565b939692955090935050565b634e487b7160e01b600052602160045260246000fd5b8051825260208082015190830152604080820151908301526060808201516001600160a01b03169083015260808101516002811061162d57634e487b7160e01b600052602160045260246000fd5b608083015260a09081015160010b910152565b60c0810161034582846115df565b80601b0b8114610e4f57600080fd5b63ffffffff81168114610e4f57600080fd5b60008060008060008060c0878903121561168857600080fd5b8635611693816114a9565b955060208701356116a38161164e565b945060408701356116b38161165d565b959894975094956060810135955060808101359460a0909101359350915050565b600081518084526020808501945080840160005b83811015611713578151805161ffff16885283015183880152604090960195908201906001016116e8565b509495945050505050565b60208152815160208201526020820151604082015260408201516060820152600060608301516117536080840182601b0b9052565b50608083015163ffffffff811660a08401525060a083015160c083015260c083015160e083015260e08301516101008181850152808501519150506101206117a5818501836001600160a01b03169052565b8085015191505061016061014081818601526117c56101808601846116d4565b95015160ff169301929092525090919050565b60008083601f8401126117ea57600080fd5b5081356001600160401b0381111561180157600080fd5b6020830191508360208260051b850101111561181c57600080fd5b9250929050565b60008060006040848603121561183857600080fd5b8335611843816114a9565b925060208401356001600160401b0381111561185e57600080fd5b61186a868287016117d8565b9497909650939450505050565b60008083601f84011261188957600080fd5b5081356001600160401b038111156118a057600080fd5b60208301915083602082850101111561181c57600080fd5b6000806000604084860312156118cd57600080fd5b8335925060208401356001600160401b038111156118ea57600080fd5b61186a86828701611877565b6000806000806060858703121561190c57600080fd5b8435611917816114a9565b93506020850135925060408501356001600160401b0381111561193957600080fd5b61194587828801611877565b95989497509550505050565b60006020828403121561196357600080fd5b8135610e5f816114a9565b6000806000806000806080878903121561198757600080fd5b8635611992816114a9565b955060208701356119a2816114a9565b945060408701356001600160401b03808211156119be57600080fd5b6119ca8a838b016117d8565b909650945060608901359150808211156119e357600080fd5b506119f089828a016117d8565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b8181101561152f57611a318385516115df565b9284019260c09290920191600101611a1e565b6001600160a01b0391909116815260200190565b60008060008060608587031215611a6e57600080fd5b8435611a79816114a9565b93506020850135611a89816114a9565b925060408501356001600160401b0381111561193957600080fd5b60005b83811015611abf578181015183820152602001611aa7565b50506000910152565b60008151808452611ae0816020860160208601611aa4565b601f01601f19169290920160200192915050565b828152604060208201526000610eef6040830184611ac8565b81516001600160a01b031681526020808301519082015260408101610345565b60018060a01b03841681528260010b6020820152606060408201526000611b576060830184611ac8565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611b9857611b98611b60565b60405290565b60405161016081016001600160401b0381118282101715611b9857611b98611b60565b604051601f8201601f191681016001600160401b0381118282101715611be957611be9611b60565b604052919050565b80516110cc816114a9565b600060c08284031215611c0e57600080fd5b60405160c081018181106001600160401b0382111715611c3057611c30611b60565b80604052508251815260208301516020820152604083015160408201526060830151611c5b816114a9565b6060820152608083015160028110611c7257600080fd5b608082015260a0830151611c8581611567565b60a08201529392505050565b80516110cc8161164e565b80516110cc8161165d565b600082601f830112611cb857600080fd5b815160206001600160401b03821115611cd357611cd3611b60565b611ce1818360051b01611bc1565b82815260069290921b84018101918181019086841115611d0057600080fd5b8286015b84811015610aa25760408189031215611d1d5760008081fd5b611d25611b76565b815161ffff81168114611d385760008081fd5b81528185015185820152835291830191604001611d04565b805160ff811681146110cc57600080fd5b600060208284031215611d7357600080fd5b81516001600160401b0380821115611d8a57600080fd5b908301906101608286031215611d9f57600080fd5b611da7611b9e565b825181526020830151602082015260408301516040820152611dcb60608401611c91565b6060820152611ddc60808401611c9c565b608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100611e0d818501611bf1565b908201526101208381015183811115611e2557600080fd5b611e3188828701611ca7565b8284015250506101409150611e47828401611d50565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611e9457611e94611e6c565b5060010190565b600060208284031215611ead57600080fd5b81518015158114610e5f57600080fd5b600060208284031215611ecf57600080fd5b604051602081018181106001600160401b0382111715611ef157611ef1611b60565b6040529050808235611f02816114a9565b905292915050565b600060208284031215611f1c57600080fd5b6103428383611ebd565b600060408284031215611f3857600080fd5b611f40611b76565b90508135611f4d816114a9565b808252506020820135602082015292915050565b600060408284031215611f7357600080fd5b6103428383611f26565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061060190830184611ac8565b6020808252601e908201527f5472616465526f757465723a20696e76616c696420617267756d656e74730000604082015260600190565b60006020828403121561200057600080fd5b8135610e5f81611567565b6000825161201d818460208701611aa4565b9190910192915050565b8181038181111561034557610345611e6c565b634e487b7160e01b600052603160045260246000fd5b6020815260006103426020830184611ac856fea2646970667358221220ce2ff2c1577bbb24389f9ce6077be07821adfe807c7afba9689caeae68f73f5564736f6c63430008130033608060405234801561001057600080fd5b506113c3806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063e19e633211610066578063e19e633214610127578063e3d670d71461013a578063e6b67d461461015b578063e9fcf1f61461017e578063f3fef3a31461019157600080fd5b80630ec05d35146100a357806328fe7031146100cc5780633eabb143146100ec578063742fe1f814610101578063c0c53b8b14610114575b600080fd5b6100b66100b1366004610c42565b6101a4565b6040516100c39190610cf1565b60405180910390f35b6100df6100da366004610dab565b6102e3565b6040516100c39190610dc8565b6100ff6100fa366004610e54565b61030d565b005b6100ff61010f366004610e9f565b6103aa565b6100ff610122366004610ecb565b61045b565b6100ff610135366004610f16565b6104d1565b61014d610148366004610dab565b61059a565b6040519081526020016100c3565b61016e610169366004610e9f565b61060a565b60405190151581526020016100c3565b6100ff61018c366004610e9f565b610633565b6100ff61019f366004610e9f565b6106c1565b6102166040518061016001604052806000815260200160008152602001600081526020016000601b0b8152602001600063ffffffff16815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600060ff1681525090565b6002546001600160a01b0316331461024157604051639165520160e01b815260040160405180910390fd5b604080516020810182526000815290516364ce547960e11b81526001600160a01b0389169163c99ca8f291610282918a918a918a918a918a91600401610fd8565b6000604051808303816000875af11580156102a1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c9919081019061119a565b90506102d9878260000151610731565b9695505050505050565b6001600160a01b038116600090815260036020526040902060609061030790610753565b92915050565b60005460405163252c724f60e11b81526001600160a01b0390911690634a58e49e9061033d90339060040161128f565b602060405180830381865afa15801561035a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037e91906112a3565b61039b5760405163c4bbea6960e01b815260040160405180910390fd5b6103a53384610760565b505050565b6002546001600160a01b031633146103d557604051639165520160e01b815260040160405180910390fd5b6103df828261060a565b6103fc57604051632b48580b60e11b815260040160405180910390fd5b60405163a126d60160e01b8152600481018290526001600160a01b0383169063a126d601906024015b600060405180830381600087803b15801561043f57600080fd5b505af1158015610453573d6000803e3d6000fd5b505050505050565b600254600160a01b900460ff16156104855760405162dc149f60e41b815260040160405180910390fd5b600180546001600160a01b039485166001600160a01b031991821617909155600280546001600160a81b03191693851693909317600160a01b1790925560008054919093169116179055565b60005460405163252c724f60e11b81526001600160a01b0390911690634a58e49e9061050190339060040161128f565b602060405180830381865afa15801561051e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054291906112a3565b61055f5760405163c4bbea6960e01b815260040160405180910390fd5b826105698661059a565b10156105885760405163569d45cf60e11b815260040160405180910390fd5b610593858585610782565b5050505050565b6040516370a0823160e01b81526000906001600160a01b038316906370a08231906105c990309060040161128f565b602060405180830381865afa1580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030791906112c5565b6001600160a01b038216600090815260036020526040812061062c90836107d4565b9392505050565b6002546001600160a01b0316331461065e57604051639165520160e01b815260040160405180910390fd5b610668828261060a565b61068557604051632b48580b60e11b815260040160405180910390fd5b6040805160208101825260008152905163d22c7a4560e01b81526001600160a01b0384169163d22c7a45916104259185913091906004016112de565b6001546001600160a01b031633146106ec576040516330cd747160e01b815260040160405180910390fd5b806106f68361059a565b10156107155760405163569d45cf60e11b815260040160405180910390fd5b60015461072d9083906001600160a01b031683610782565b5050565b6001600160a01b03821660009081526003602052604090206103a590826107ec565b6060600061062c836107f8565b6001600160a01b03821660009081526003602052604090206103a59082610854565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103a5908490610860565b6000818152600183016020526040812054151561062c565b600061062c8383610937565b60608160000180548060200260200160405190810160405280929190818152602001828054801561084857602002820191906000526020600020905b815481526020019060010190808311610834575b50505050509050919050565b600061062c8383610986565b60006108b5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a799092919063ffffffff16565b8051909150156103a557808060200190518101906108d391906112a3565b6103a55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b600081815260018301602052604081205461097e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610307565b506000610307565b60008181526001830160205260408120548015610a6f5760006109aa600183611311565b85549091506000906109be90600190611311565b9050818114610a235760008660000182815481106109de576109de611332565b9060005260206000200154905080876000018481548110610a0157610a01611332565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610a3457610a34611348565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610307565b6000915050610307565b6060610a888484600085610a90565b949350505050565b606082471015610af15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161092e565b600080866001600160a01b03168587604051610b0d919061135e565b60006040518083038185875af1925050503d8060008114610b4a576040519150601f19603f3d011682016040523d82523d6000602084013e610b4f565b606091505b5091509150610b6087838387610b6b565b979650505050505050565b60608315610bda578251600003610bd3576001600160a01b0385163b610bd35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161092e565b5081610a88565b610a888383815115610bef5781518083602001fd5b8060405162461bcd60e51b815260040161092e919061137a565b6001600160a01b0381168114610c1e57600080fd5b50565b80601b0b8114610c1e57600080fd5b63ffffffff81168114610c1e57600080fd5b60008060008060008060c08789031215610c5b57600080fd5b8635610c6681610c09565b95506020870135610c7681610c21565b94506040870135610c8681610c30565b959894975094956060810135955060808101359460a0909101359350915050565b600081518084526020808501945080840160005b83811015610ce6578151805161ffff1688528301518388015260409096019590820190600101610cbb565b509495945050505050565b6020815281516020820152602082015160408201526040820151606082015260006060830151610d266080840182601b0b9052565b50608083015163ffffffff811660a08401525060a083015160c083015260c083015160e083015260e0830151610100818185015280850151915050610120610d78818501836001600160a01b03169052565b808501519150506101606101408181860152610d98610180860184610ca7565b95015160ff169301929092525090919050565b600060208284031215610dbd57600080fd5b813561062c81610c09565b6020808252825182820181905260009190848201906040850190845b81811015610e0057835183529284019291840191600101610de4565b50909695505050505050565b60008083601f840112610e1e57600080fd5b5081356001600160401b03811115610e3557600080fd5b602083019150836020828501011115610e4d57600080fd5b9250929050565b600080600060408486031215610e6957600080fd5b8335925060208401356001600160401b03811115610e8657600080fd5b610e9286828701610e0c565b9497909650939450505050565b60008060408385031215610eb257600080fd5b8235610ebd81610c09565b946020939093013593505050565b600080600060608486031215610ee057600080fd5b8335610eeb81610c09565b92506020840135610efb81610c09565b91506040840135610f0b81610c09565b809150509250925092565b600080600080600060808688031215610f2e57600080fd5b8535610f3981610c09565b94506020860135610f4981610c09565b93506040860135925060608601356001600160401b03811115610f6b57600080fd5b610f7788828901610e0c565b969995985093965092949392505050565b60005b83811015610fa3578181015183820152602001610f8b565b50506000910152565b60008151808452610fc4816020860160208601610f88565b601f01601f19169290920160200192915050565b86601b0b815263ffffffff8616602082015284604082015283606082015282608082015260c060a0820152600061101260c0830184610fac565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156110565761105661101e565b60405290565b60405161016081016001600160401b03811182821017156110565761105661101e565b604051601f8201601f191681016001600160401b03811182821017156110a7576110a761101e565b604052919050565b80516110ba81610c21565b919050565b80516110ba81610c30565b80516110ba81610c09565b600082601f8301126110e657600080fd5b815160206001600160401b038211156111015761110161101e565b61110f818360051b0161107f565b82815260069290921b8401810191818101908684111561112e57600080fd5b8286015b8481101561117e576040818903121561114b5760008081fd5b611153611034565b815161ffff811681146111665760008081fd5b81528185015185820152835291830191604001611132565b509695505050505050565b805160ff811681146110ba57600080fd5b6000602082840312156111ac57600080fd5b81516001600160401b03808211156111c357600080fd5b9083019061016082860312156111d857600080fd5b6111e061105c565b825181526020830151602082015260408301516040820152611204606084016110af565b6060820152611215608084016110bf565b608082015260a083015160a082015260c083015160c082015260e083015160e08201526101006112468185016110ca565b90820152610120838101518381111561125e57600080fd5b61126a888287016110d5565b8284015250506101409150611280828401611189565b91810191909152949350505050565b6001600160a01b0391909116815260200190565b6000602082840312156112b557600080fd5b8151801515811461062c57600080fd5b6000602082840312156112d757600080fd5b5051919050565b8381526001600160a01b038316602082015260606040820181905260009061130890830184610fac565b95945050505050565b8181038181111561030757634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60008251611370818460208701610f88565b9190910192915050565b60208152600061062c6020830184610fac56fea26469706673582212205ffeb7ca8461757e352125b85f7d0f885078816d5fefdedb060a5dd26e50930e64736f6c63430008130033";

type ChromaticRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChromaticRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChromaticRouter__factory extends ContractFactory {
  constructor(...args: ChromaticRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _marketFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChromaticRouter> {
    return super.deploy(
      _marketFactory,
      overrides || {}
    ) as Promise<ChromaticRouter>;
  }
  override getDeployTransaction(
    _marketFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_marketFactory, overrides || {});
  }
  override attach(address: string): ChromaticRouter {
    return super.attach(address) as ChromaticRouter;
  }
  override connect(signer: Signer): ChromaticRouter__factory {
    return super.connect(signer) as ChromaticRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChromaticRouterInterface {
    return new utils.Interface(_abi) as ChromaticRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChromaticRouter {
    return new Contract(address, _abi, signerOrProvider) as ChromaticRouter;
  }
}
